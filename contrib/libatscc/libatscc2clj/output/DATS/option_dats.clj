;;;;;;
;;
;; The Clojure code is generated by atscc2clj
;; The starting compilation time is: 2016-12-25: 17h:42m
;;
;;;;;;
(declare ats2cljpre_option_some)
(declare ats2cljpre_option_none)
(declare ats2cljpre_option_unsome)
(declare ats2cljpre_option_is_some)
(declare ats2cljpre_option_is_none)
;;;;;;


;;fun
(defn
 ats2cljpre_option_some[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret0 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_option_some
  (ATSPMVtysum arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_option_none[]
(
with-local-vars
[
;;knd = 0
  tmpret1 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_option_none
  atscc2clj_null
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_option_unsome[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret2 nil
  tmp3 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_option_unsome
  (ATSINStmpset tmp3 (ATSSELcon arg0 0))
  @tmp3
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_option_is_some[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret4 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_option_is_some
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptrisnull arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_true
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       atscc2clj_false
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_option_is_none[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret5 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_option_is_none
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_true
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       atscc2clj_false
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun

;;;;;;
;;
;; end-of-compilation-unit
;;
;;;;;;
