;;;;;;
;;
;; The Clojure code is generated by atscc2clj
;; The starting compilation time is: 2016-12-25: 17h:42m
;;
;;;;;;
(declare _ats2cljpre_qlistref_auxl_5)
(declare _ats2cljpre_qlistref_auxr_6)
(declare _ats2cljpre_qlistref_auxl_8)
(declare _ats2cljpre_qlistref_auxr_9)
(declare ats2cljpre_qlistref_make_nil)
(declare ats2cljpre_qlistref_length)
(declare ats2cljpre_qlistref_enqueue)
(declare ats2cljpre_qlistref_dequeue_opt)
(declare ats2cljpre_qlistref_foldleft)
(declare _ats2cljpre_qlistref_auxl_5)
(declare _ats2cljpre_qlistref_auxr_6)
(declare ats2cljpre_qlistref_foldright)
(declare _ats2cljpre_qlistref_auxl_8)
(declare _ats2cljpre_qlistref_auxr_9)
;;;;;;


;; ATSassume(_057_Users_057_RyanKing_057_ATS2_055_contrib_057_contrib_057_libatscc_057_libatscc2clj_057_SATS_057_qlistref_056_sats__qlistref_type)

;;fun
(defn
 ats2cljpre_qlistref_make_nil[]
(
with-local-vars
[
;;knd = 0
  tmpret0 nil
  tmp1 nil
  tmp2 nil
  tmp3 nil
  tmp4 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_qlistref_make_nil
  (ATSINStmpset tmp2 atscc2clj_null)
  (ATSINStmpset tmp1 (ats2cljpre_ref @tmp2))
  (ATSINStmpset tmp4 atscc2clj_null)
  (ATSINStmpset tmp3 (ats2cljpre_ref @tmp4))
  (ATSPMVtysum @tmp1 @tmp3)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_qlistref_length[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret5 nil
  tmp6 nil
  tmp7 nil
  tmp8 nil
  tmp9 nil
  tmp10 nil
  tmp11 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_qlistref_length
  (ATSINStmpset tmp6 (ATSSELcon arg0 0))
  (ATSINStmpset tmp7 (ATSSELcon arg0 1))
  (ATSINStmpset tmp9 (ats2cljpre_ref_get_elt @tmp6))
  (ATSINStmpset tmp8 (ats2cljpre_list_length @tmp9))
  (ATSINStmpset tmp11 (ats2cljpre_ref_get_elt @tmp7))
  (ATSINStmpset tmp10 (ats2cljpre_list_length @tmp11))
  (ats2cljpre_add_int1_int1 @tmp8 @tmp10)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_qlistref_enqueue[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmp13 nil
  tmp14 nil
  tmp15 nil
  tmp16 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_qlistref_enqueue
  (ATSINStmpset tmp13 (ATSSELcon arg0 0))
  (ATSINStmpset tmp14 (ATSSELcon arg0 1))
  (ATSINStmpset tmp16 (ats2cljpre_ref_get_elt @tmp13))
  (ATSINStmpset tmp15 (ATSPMVtysum arg1 @tmp16))
  (ATSINSmove1_void (ats2cljpre_ref_set_elt @tmp13 @tmp15))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_qlistref_dequeue_opt[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret17 nil
  tmp18 nil
  tmp19 nil
  tmp20 nil
  tmp21 nil
  tmp22 nil
  tmp23 nil
  tmp25 nil
  tmp26 nil
  tmp27 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_qlistref_dequeue_opt
  (ATSINStmpset tmp18 (ATSSELcon arg0 0))
  (ATSINStmpset tmp19 (ATSSELcon arg0 1))
  (ATSINStmpset tmp20 (ats2cljpre_ref_get_elt @tmp19))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp20)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       (ATSINStmpset tmp23 (ats2cljpre_ref_get_elt @tmp18))
       (ATSINStmpset tmp25 atscc2clj_null)
       (ATSINSmove1_void (ats2cljpre_ref_set_elt @tmp18 @tmp25))
       (let[
         casefnx
         (fn casefnx[tmplab](case tmplab
           ;; ATSbranchseq_beg
           1 (do
            (if (ATSCKptriscons @tmp23)
              (casefnx 4)
              (do
               (casefnx 2)
              )
            )
           ) ;; end-of-branch
           2 (do
            atscc2clj_null
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; ATSbranchseq_beg
           3 (do
            (casefnx 4)
           ) ;; end-of-branch
           4 (do
            (ATSINStmpset tmp26 (ATSSELcon @tmp23 0))
            (ATSINStmpset tmp27 (ATSSELcon @tmp23 1))
            (ATSINSmove1_void (ats2cljpre_ref_set_elt @tmp19 @tmp27))
            (ATSPMVtysum @tmp26)
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
          ) ;; end-of-case
         ) ;; end-of-casefnx
        ] (casefnx 1)
       ) ;; end-of-let(casefnx)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp21 (ATSSELcon @tmp20 0))
       (ATSINStmpset tmp22 (ATSSELcon @tmp20 1))
       (ATSINSmove1_void (ats2cljpre_ref_set_elt @tmp19 @tmp22))
       (ATSPMVtysum @tmp21)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_qlistref_foldleft[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret30 nil
  tmp31 nil
  tmp32 nil
  tmp41 nil
  tmp42 nil
  tmp43 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_qlistref_foldleft
  (ATSINStmpset tmp31 (ATSSELcon arg0 0))
  (ATSINStmpset tmp32 (ATSSELcon arg0 1))
  (ATSINStmpset tmp41 (ats2cljpre_ref_get_elt @tmp31))
  (ATSINStmpset tmp43 (ats2cljpre_ref_get_elt @tmp32))
  (ATSINStmpset tmp42 (_ats2cljpre_qlistref_auxl_5 arg2 arg1 @tmp43))
  (_ats2cljpre_qlistref_auxr_6 arg2 @tmp41 @tmp42)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_qlistref_auxl_5[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret33 nil
  tmp34 nil
  tmp35 nil
  tmp36 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_qlistref_auxl_5
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg0
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp34 (ATSSELcon arg1 0))
         (ATSINStmpset tmp35 (ATSSELcon arg1 1))
         (ATSINStmpset tmp36 ((ATSfunclo_fclo env0) env0 arg0 @tmp34))
         ;; apy0 = @tmp36
         ;; apy1 = @tmp35
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_qlistref_auxl_5
         (_ats2cljpre_qlistref_auxl_5 env0 @tmp36 @tmp35)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret33;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_qlistref_auxr_6[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret37 nil
  tmp38 nil
  tmp39 nil
  tmp40 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_qlistref_auxr_6
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg1
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp38 (ATSSELcon arg0 0))
       (ATSINStmpset tmp39 (ATSSELcon arg0 1))
       (ATSINStmpset tmp40 (_ats2cljpre_qlistref_auxr_6 env0 @tmp39 arg1))
       ((ATSfunclo_fclo env0) env0 @tmp40 @tmp38)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_qlistref_foldright[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret44 nil
  tmp45 nil
  tmp46 nil
  tmp55 nil
  tmp56 nil
  tmp57 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_qlistref_foldright
  (ATSINStmpset tmp45 (ATSSELcon arg0 0))
  (ATSINStmpset tmp46 (ATSSELcon arg0 1))
  (ATSINStmpset tmp55 (ats2cljpre_ref_get_elt @tmp46))
  (ATSINStmpset tmp57 (ats2cljpre_ref_get_elt @tmp45))
  (ATSINStmpset tmp56 (_ats2cljpre_qlistref_auxl_8 arg1 arg2 @tmp57))
  (_ats2cljpre_qlistref_auxr_9 arg1 @tmp55 @tmp56)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_qlistref_auxl_8[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret47 nil
  tmp48 nil
  tmp49 nil
  tmp50 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_qlistref_auxl_8
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg0
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp48 (ATSSELcon arg1 0))
         (ATSINStmpset tmp49 (ATSSELcon arg1 1))
         (ATSINStmpset tmp50 ((ATSfunclo_fclo env0) env0 @tmp48 arg0))
         ;; apy0 = @tmp50
         ;; apy1 = @tmp49
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_qlistref_auxl_8
         (_ats2cljpre_qlistref_auxl_8 env0 @tmp50 @tmp49)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret47;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_qlistref_auxr_9[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret51 nil
  tmp52 nil
  tmp53 nil
  tmp54 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_qlistref_auxr_9
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg1
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp52 (ATSSELcon arg0 0))
       (ATSINStmpset tmp53 (ATSSELcon arg0 1))
       (ATSINStmpset tmp54 (_ats2cljpre_qlistref_auxr_9 env0 @tmp53 arg1))
       ((ATSfunclo_fclo env0) env0 @tmp52 @tmp54)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun

;;;;;;
;;
;; end-of-compilation-unit
;;
;;;;;;
