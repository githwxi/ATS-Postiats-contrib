;;;;;;
;;
;; The Clojure code is generated by atscc2clj
;; The starting compilation time is: 2016-12-25: 17h:42m
;;
;;;;;;
(declare _ats2cljpre_stream_patsfun_6)
(declare _ats2cljpre_stream_loop_9)
(declare _ats2cljpre_stream_loop_11)
(declare _ats2cljpre_stream_aux_13)
(declare _ats2cljpre_stream_loop_15)
(declare _ats2cljpre_stream_patsfun_17)
(declare _ats2cljpre_stream_auxmain_19)
(declare _ats2cljpre_stream_auxmain_21)
(declare _ats2cljpre_stream_patsfun_23)
(declare _ats2cljpre_stream_patsfun_25)
(declare _ats2cljpre_stream_patsfun_27)
(declare _ats2cljpre_stream_patsfun_29)
(declare _ats2cljpre_stream_patsfun_31)
(declare _ats2cljpre_stream_patsfun_33)
(declare _ats2cljpre_stream_patsfun_36)
(declare _ats2cljpre_stream_patsfun_39)
(declare _ats2cljpre_stream_patsfun_42)
(declare _ats2cljpre_stream_loop_44)
(declare _ats2cljpre_stream_patsfun_46)
(declare _ats2cljpre_stream_auxmain_48)
(declare _ats2cljpre_stream_patsfun_49)
(declare _ats2cljpre_stream_auxmain_51)
(declare _ats2cljpre_stream_patsfun_52)
(declare _ats2cljpre_stream_patsfun_53)
(declare _ats2cljpre_stream_patsfun_56)
(declare _ats2cljpre_stream_patsfun_58)
(declare _ats2cljpre_stream_patsfun_60)
(declare _ats2cljpre_stream_loop_63)
(declare _ats2cljpre_stream_patsfun_65)
(declare _ats2cljpre_stream_patsfun_67)
(declare _ats2cljpre_stream_aux_69)
(declare _ats2cljpre_stream_patsfun_70)
(declare _ats2cljpre_stream_auxlst_71)
(declare _ats2cljpre_stream_patsfun_72)
(declare ats2cljpre_stream_make_list)
(declare _ats2cljpre_stream_patsfun_6)
(declare ats2cljpre_stream_make_list0)
(declare ats2cljpre_stream_nth_opt)
(declare _ats2cljpre_stream_loop_9)
(declare ats2cljpre_stream_length)
(declare _ats2cljpre_stream_loop_11)
(declare ats2cljpre_stream2list)
(declare _ats2cljpre_stream_aux_13)
(declare ats2cljpre_stream2list_rev)
(declare _ats2cljpre_stream_loop_15)
(declare ats2cljpre_stream_takeLte)
(declare _ats2cljpre_stream_patsfun_17)
(declare ats2cljpre_stream_take_opt)
(declare _ats2cljpre_stream_auxmain_19)
(declare ats2cljpre_stream_drop_opt)
(declare _ats2cljpre_stream_auxmain_21)
(declare ats2cljpre_stream_append)
(declare _ats2cljpre_stream_patsfun_23)
(declare ats2cljpre_stream_concat)
(declare _ats2cljpre_stream_patsfun_25)
(declare ats2cljpre_stream_map_cloref)
(declare _ats2cljpre_stream_patsfun_27)
(declare ats2cljpre_stream_map_method)
(declare _ats2cljpre_stream_patsfun_29)
(declare ats2cljpre_stream_filter_cloref)
(declare _ats2cljpre_stream_patsfun_31)
(declare ats2cljpre_stream_filter_method)
(declare _ats2cljpre_stream_patsfun_33)
(declare ats2cljpre_stream_forall_cloref)
(declare ats2cljpre_stream_forall_method)
(declare _ats2cljpre_stream_patsfun_36)
(declare ats2cljpre_stream_exists_cloref)
(declare ats2cljpre_stream_exists_method)
(declare _ats2cljpre_stream_patsfun_39)
(declare ats2cljpre_stream_foreach_cloref)
(declare ats2cljpre_stream_foreach_method)
(declare _ats2cljpre_stream_patsfun_42)
(declare ats2cljpre_stream_iforeach_cloref)
(declare _ats2cljpre_stream_loop_44)
(declare ats2cljpre_stream_iforeach_method)
(declare _ats2cljpre_stream_patsfun_46)
(declare ats2cljpre_stream_tabulate_cloref)
(declare _ats2cljpre_stream_auxmain_48)
(declare _ats2cljpre_stream_patsfun_49)
(declare ats2cljpre_cross_stream_list)
(declare _ats2cljpre_stream_auxmain_51)
(declare _ats2cljpre_stream_patsfun_52)
(declare _ats2cljpre_stream_patsfun_53)
(declare ats2cljpre_cross_stream_list0)
(declare ats2cljpre_stream2cloref_exn)
(declare _ats2cljpre_stream_patsfun_56)
(declare ats2cljpre_stream2cloref_opt)
(declare _ats2cljpre_stream_patsfun_58)
(declare ats2cljpre_stream2cloref_last)
(declare _ats2cljpre_stream_patsfun_60)
(declare ats2cljpre_stream_take_while_cloref)
(declare ats2cljpre_stream_rtake_while_cloref)
(declare _ats2cljpre_stream_loop_63)
(declare ats2cljpre_stream_take_until_cloref)
(declare _ats2cljpre_stream_patsfun_65)
(declare ats2cljpre_stream_rtake_until_cloref)
(declare _ats2cljpre_stream_patsfun_67)
(declare ats2cljpre_stream_list_xprod2)
(declare _ats2cljpre_stream_aux_69)
(declare _ats2cljpre_stream_patsfun_70)
(declare _ats2cljpre_stream_auxlst_71)
(declare _ats2cljpre_stream_patsfun_72)
;;;;;;


(defn
_ats2cljpre_stream_patsfun_6__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_6 (ATSCCget_1 _fcenvs_))) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_17__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_patsfun_17 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_23__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_23 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_))) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_25__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_25 (ATSCCget_1 _fcenvs_))) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_27__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_27 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_))) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_29__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_patsfun_29 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_31__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_31 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_))) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_33__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_patsfun_33 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_36__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_patsfun_36 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_39__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_patsfun_39 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_42__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_patsfun_42 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_46__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_patsfun_46 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_49__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_49 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_))) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_52__closurerize[xenv0 xenv1 xenv2 xenv3]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_52 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) (ATSCCget_3 _fcenvs_) (ATSCCget_at _fcenvs_ 4))) xenv0 xenv1 xenv2 xenv3)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_53__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_53 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_))) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_56__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_56 (ATSCCget_1 _fcenvs_))) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_58__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_58 (ATSCCget_1 _fcenvs_))) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_60__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_60 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_))) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_65__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0 xarg1](_ats2cljpre_stream_patsfun_65 (ATSCCget_1 _fcenvs_) xarg0 xarg1)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_67__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0 xarg1](_ats2cljpre_stream_patsfun_67 (ATSCCget_1 _fcenvs_) xarg0 xarg1)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_70__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_70 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_))) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_patsfun_72__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_patsfun_72 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_))) xenv0 xenv1)
;;%}
) ;; end-of-defn


;;fun
(defn
 ats2cljpre_stream_make_list[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret7 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_make_list
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_6__closurerize arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_6[env0]
(
with-local-vars
[
;;knd = 0
  tmpret8 nil
  tmp9 nil
  tmp10 nil
  tmp11 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_6
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons env0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp9 (ATSSELcon env0 0))
       (ATSINStmpset tmp10 (ATSSELcon env0 1))
       (ATSINStmpset tmp11 (ats2cljpre_stream_make_list @tmp10))
       (ATSPMVtysum @tmp9 @tmp11)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_make_list0[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret12 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_make_list0
  (ats2cljpre_stream_make_list arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_nth_opt[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret13 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_nth_opt
  (_ats2cljpre_stream_loop_9 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_loop_9[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret14 nil
  tmp15 nil
  tmp16 nil
  tmp17 nil
  tmp18 nil
  tmp19 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_loop_9
    (ATSINStmpset tmp15 (ATSPMVlazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp15)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_null
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp16 (ATSSELcon @tmp15 0))
         (ATSINStmpset tmp17 (ATSSELcon @tmp15 1))
         (ATSINStmpset tmp18 (ats2cljpre_gt_int1_int1 arg1 0))
         (if @tmp18
           (do
            (ATSINStmpset tmp19 (ats2cljpre_pred_int1 arg1))
            ;; apy0 = @tmp17
            ;; apy1 = @tmp19
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_loop_9
            (_ats2cljpre_stream_loop_9 @tmp17 @tmp19)
           ) ;; if-then
           (do
            (ATSPMVtysum @tmp16)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret14;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_length[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret20 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_length
  (_ats2cljpre_stream_loop_11 arg0 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_loop_11[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret21 nil
  tmp22 nil
  tmp24 nil
  tmp25 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_loop_11
    (ATSINStmpset tmp22 (ATSPMVlazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp22)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp24 (ATSSELcon @tmp22 1))
         (ATSINStmpset tmp25 (ats2cljpre_add_int1_int1 arg1 1))
         ;; apy0 = @tmp24
         ;; apy1 = @tmp25
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_loop_11
         (_ats2cljpre_stream_loop_11 @tmp24 @tmp25)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret21;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream2list[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret26 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream2list
  (_ats2cljpre_stream_aux_13 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_aux_13[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret27 nil
  tmp28 nil
  tmp29 nil
  tmp30 nil
  tmp31 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_aux_13
  (ATSINStmpset tmp28 (ATSPMVlazyval_eval arg0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp28)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp29 (ATSSELcon @tmp28 0))
       (ATSINStmpset tmp30 (ATSSELcon @tmp28 1))
       (ATSINStmpset tmp31 (_ats2cljpre_stream_aux_13 @tmp30))
       (ATSPMVtysum @tmp29 @tmp31)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream2list_rev[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret32 nil
  tmp38 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream2list_rev
  (ATSINStmpset tmp38 atscc2clj_null)
  (_ats2cljpre_stream_loop_15 arg0 @tmp38)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_loop_15[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret33 nil
  tmp34 nil
  tmp35 nil
  tmp36 nil
  tmp37 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_loop_15
    (ATSINStmpset tmp34 (ATSPMVlazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp34)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp35 (ATSSELcon @tmp34 0))
         (ATSINStmpset tmp36 (ATSSELcon @tmp34 1))
         (ATSINStmpset tmp37 (ATSPMVtysum @tmp35 arg1))
         ;; apy0 = @tmp36
         ;; apy1 = @tmp37
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_loop_15
         (_ats2cljpre_stream_loop_15 @tmp36 @tmp37)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret33;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_takeLte[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret39 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_takeLte
  (ATSPMVllazyval (_ats2cljpre_stream_patsfun_17__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_17[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret40 nil
  tmp41 nil
  tmp42 nil
  tmp43 nil
  tmp44 nil
  tmp45 nil
  tmp46 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_17
  (if arg0
    (do
     (ATSINStmpset tmp41 (ats2cljpre_gt_int1_int1 env1 0))
     (if @tmp41
       (do
        (ATSINStmpset tmp42 (ATSPMVlazyval_eval env0))
        (let[
          casefnx
          (fn casefnx[tmplab](case tmplab
            ;; ATSbranchseq_beg
            1 (do
             (if (ATSCKptriscons @tmp42)
               (casefnx 4)
               (do
                (casefnx 2)
               )
             )
            ) ;; end-of-branch
            2 (do
             atscc2clj_null
            ) ;; end-of-branch
            ;; ATSbranchseq_end
            ;; ATSbranchseq_beg
            3 (do
             (casefnx 4)
            ) ;; end-of-branch
            4 (do
             (ATSINStmpset tmp43 (ATSSELcon @tmp42 0))
             (ATSINStmpset tmp44 (ATSSELcon @tmp42 1))
             (ATSINStmpset tmp46 (ats2cljpre_sub_int1_int1 env1 1))
             (ATSINStmpset tmp45 (ats2cljpre_stream_takeLte @tmp44 @tmp46))
             (ATSPMVtysum @tmp43 @tmp45)
            ) ;; end-of-branch
            ;; ATSbranchseq_end
            ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
           ) ;; end-of-case
          ) ;; end-of-casefnx
         ] (casefnx 1)
        ) ;; end-of-let(casefnx)
       ) ;; if-then
       (do
        atscc2clj_null
       ) ;; if-else
     )
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_take_opt[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret47 nil
  tmp56 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_take_opt
  (ATSINStmpset tmp56 atscc2clj_null)
  (_ats2cljpre_stream_auxmain_19 arg1 arg0 0 @tmp56)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_auxmain_19[env0 arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
  tmpret48 nil
  tmp49 nil
  tmp50 nil
  tmp51 nil
  tmp52 nil
  tmp53 nil
  tmp54 nil
  tmp55 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
     arg2 arg2
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_auxmain_19
    (ATSINStmpset tmp49 (ats2cljpre_lt_int1_int1 arg1 env0))
    (if @tmp49
      (do
       (ATSINStmpset tmp50 (ATSPMVlazyval_eval arg0))
       (let[
         casefnx
         (fn casefnx[tmplab](case tmplab
           ;; ATSbranchseq_beg
           1 (do
            (if (ATSCKptriscons @tmp50)
              (casefnx 4)
              (do
               (casefnx 2)
              )
            )
           ) ;; end-of-branch
           2 (do
            atscc2clj_null
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; ATSbranchseq_beg
           3 (do
            (casefnx 4)
           ) ;; end-of-branch
           4 (do
            (ATSINStmpset tmp51 (ATSSELcon @tmp50 0))
            (ATSINStmpset tmp52 (ATSSELcon @tmp50 1))
            (ATSINStmpset tmp53 (ats2cljpre_add_int1_int1 arg1 1))
            (ATSINStmpset tmp54 (ATSPMVtysum @tmp51 arg2))
            ;; apy0 = @tmp52
            ;; apy1 = @tmp53
            ;; apy2 = @tmp54
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; arg2 = apy2
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_auxmain_19
            (_ats2cljpre_stream_auxmain_19 env0 @tmp52 @tmp53 @tmp54)
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
          ) ;; end-of-case
         ) ;; end-of-casefnx
        ] (casefnx 1)
       ) ;; end-of-let(casefnx)
      ) ;; if-then
      (do
       (ATSINStmpset tmp55 (ats2cljpre_list_reverse arg2))
       (ATSPMVtysum @tmp55)
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret48;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_drop_opt[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret57 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_drop_opt
  (_ats2cljpre_stream_auxmain_21 arg1 arg0 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_auxmain_21[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret58 nil
  tmp59 nil
  tmp60 nil
  tmp62 nil
  tmp63 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_auxmain_21
    (ATSINStmpset tmp59 (ats2cljpre_lt_int1_int1 arg1 env0))
    (if @tmp59
      (do
       (ATSINStmpset tmp60 (ATSPMVlazyval_eval arg0))
       (let[
         casefnx
         (fn casefnx[tmplab](case tmplab
           ;; ATSbranchseq_beg
           1 (do
            (if (ATSCKptriscons @tmp60)
              (casefnx 4)
              (do
               (casefnx 2)
              )
            )
           ) ;; end-of-branch
           2 (do
            atscc2clj_null
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; ATSbranchseq_beg
           3 (do
            (casefnx 4)
           ) ;; end-of-branch
           4 (do
            (ATSINStmpset tmp62 (ATSSELcon @tmp60 1))
            (ATSINStmpset tmp63 (ats2cljpre_add_int1_int1 arg1 1))
            ;; apy0 = @tmp62
            ;; apy1 = @tmp63
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_auxmain_21
            (_ats2cljpre_stream_auxmain_21 env0 @tmp62 @tmp63)
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
          ) ;; end-of-case
         ) ;; end-of-casefnx
        ] (casefnx 1)
       ) ;; end-of-let(casefnx)
      ) ;; if-then
      (do
       (ATSPMVtysum arg0)
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret58;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_append[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret64 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_append
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_23__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_23[env0 env1]
(
with-local-vars
[
;;knd = 0
  tmpret65 nil
  tmp66 nil
  tmp67 nil
  tmp68 nil
  tmp69 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_23
  (ATSINStmpset tmp66 (ATSPMVlazyval_eval env0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp66)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       (ATSPMVlazyval_eval env1)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp67 (ATSSELcon @tmp66 0))
       (ATSINStmpset tmp68 (ATSSELcon @tmp66 1))
       (ATSINStmpset tmp69 (ats2cljpre_stream_append @tmp68 env1))
       (ATSPMVtysum @tmp67 @tmp69)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_concat[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret70 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_concat
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_25__closurerize arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_25[env0]
(
with-local-vars
[
;;knd = 0
  tmpret71 nil
  tmp72 nil
  tmp73 nil
  tmp74 nil
  tmp75 nil
  tmp76 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_25
  (ATSINStmpset tmp72 (ATSPMVlazyval_eval env0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp72)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp73 (ATSSELcon @tmp72 0))
       (ATSINStmpset tmp74 (ATSSELcon @tmp72 1))
       (ATSINStmpset tmp76 (ats2cljpre_stream_concat @tmp74))
       (ATSINStmpset tmp75 (ats2cljpre_stream_append @tmp73 @tmp76))
       (ATSPMVlazyval_eval @tmp75)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_map_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret77 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_map_cloref
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_27__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_27[env0 env1]
(
with-local-vars
[
;;knd = 0
  tmpret78 nil
  tmp79 nil
  tmp80 nil
  tmp81 nil
  tmp82 nil
  tmp83 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_27
  (ATSINStmpset tmp79 (ATSPMVlazyval_eval env0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp79)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp80 (ATSSELcon @tmp79 0))
       (ATSINStmpset tmp81 (ATSSELcon @tmp79 1))
       (ATSINStmpset tmp82 ((ATSfunclo_fclo env1) env1 @tmp80))
       (ATSINStmpset tmp83 (ats2cljpre_stream_map_cloref @tmp81 env1))
       (ATSPMVtysum @tmp82 @tmp83)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret84 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_map_method
  (_ats2cljpre_stream_patsfun_29__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_29[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret85 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_29
  (ats2cljpre_stream_map_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_filter_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret86 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_filter_cloref
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_31__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_31[env0 env1]
(
with-local-vars
[
;;knd = 0
  tmpret87 nil
  tmp88 nil
  tmp89 nil
  tmp90 nil
  tmp91 nil
  tmp92 nil
  tmp93 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_31
  (ATSINStmpset tmp88 (ATSPMVlazyval_eval env0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp88)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp89 (ATSSELcon @tmp88 0))
       (ATSINStmpset tmp90 (ATSSELcon @tmp88 1))
       (ATSINStmpset tmp91 ((ATSfunclo_fclo env1) env1 @tmp89))
       (if @tmp91
         (do
          (ATSINStmpset tmp92 (ats2cljpre_stream_filter_cloref @tmp90 env1))
          (ATSPMVtysum @tmp89 @tmp92)
         ) ;; if-then
         (do
          (ATSINStmpset tmp93 (ats2cljpre_stream_filter_cloref @tmp90 env1))
          (ATSPMVlazyval_eval @tmp93)
         ) ;; if-else
       )
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_filter_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret94 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_filter_method
  (_ats2cljpre_stream_patsfun_33__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_33[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret95 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_33
  (ats2cljpre_stream_filter_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_forall_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret96 nil
  tmp97 nil
  tmp98 nil
  tmp99 nil
  tmp100 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_stream_forall_cloref
    (ATSINStmpset tmp97 (ATSPMVlazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp97)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_true
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp98 (ATSSELcon @tmp97 0))
         (ATSINStmpset tmp99 (ATSSELcon @tmp97 1))
         (ATSINStmpset tmp100 ((ATSfunclo_fclo arg1) arg1 @tmp98))
         (if @tmp100
           (do
            ;; apy0 = @tmp99
            ;; apy1 = arg1
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab_stream_forall_cloref
            (ats2cljpre_stream_forall_cloref @tmp99 arg1)
           ) ;; if-then
           (do
            atscc2clj_false
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret96;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_forall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret101 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_forall_method
  (_ats2cljpre_stream_patsfun_36__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_36[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret102 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_36
  (ats2cljpre_stream_forall_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_exists_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret103 nil
  tmp104 nil
  tmp105 nil
  tmp106 nil
  tmp107 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_stream_exists_cloref
    (ATSINStmpset tmp104 (ATSPMVlazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp104)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_false
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp105 (ATSSELcon @tmp104 0))
         (ATSINStmpset tmp106 (ATSSELcon @tmp104 1))
         (ATSINStmpset tmp107 ((ATSfunclo_fclo arg1) arg1 @tmp105))
         (if @tmp107
           (do
            atscc2clj_true
           ) ;; if-then
           (do
            ;; apy0 = @tmp106
            ;; apy1 = arg1
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab_stream_exists_cloref
            (ats2cljpre_stream_exists_cloref @tmp106 arg1)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret103;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_exists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret108 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_exists_method
  (_ats2cljpre_stream_patsfun_39__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_39[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret109 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_39
  (ats2cljpre_stream_exists_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_foreach_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmp111 nil
  tmp112 nil
  tmp113 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_stream_foreach_cloref
    (ATSINStmpset tmp111 (ATSPMVlazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp111)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         ATSINSmove0_void
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp112 (ATSSELcon @tmp111 0))
         (ATSINStmpset tmp113 (ATSSELcon @tmp111 1))
         (ATSINSmove1_void ((ATSfunclo_fclo arg1) arg1 @tmp112))
         ;; apy0 = @tmp113
         ;; apy1 = arg1
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab_stream_foreach_cloref
         (ats2cljpre_stream_foreach_cloref @tmp113 arg1)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_foreach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret115 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_foreach_method
  (_ats2cljpre_stream_patsfun_42__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_42[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_42
  (ATSINSmove1_void (ats2cljpre_stream_foreach_cloref env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_iforeach_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_iforeach_cloref
  (ATSINSmove1_void (_ats2cljpre_stream_loop_44 arg1 0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_loop_44[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmp119 nil
  tmp120 nil
  tmp121 nil
  tmp123 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_loop_44
    (ATSINStmpset tmp119 (ATSPMVlazyval_eval arg1))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp119)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         ATSINSmove0_void
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp120 (ATSSELcon @tmp119 0))
         (ATSINStmpset tmp121 (ATSSELcon @tmp119 1))
         (ATSINSmove1_void ((ATSfunclo_fclo env0) env0 arg0 @tmp120))
         (ATSINStmpset tmp123 (ats2cljpre_add_int1_int1 arg0 1))
         ;; apy0 = @tmp123
         ;; apy1 = @tmp121
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_loop_44
         (_ats2cljpre_stream_loop_44 env0 @tmp123 @tmp121)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_iforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret124 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_iforeach_method
  (_ats2cljpre_stream_patsfun_46__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_46[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_46
  (ATSINSmove1_void (ats2cljpre_stream_iforeach_cloref env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_tabulate_cloref[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret126 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_tabulate_cloref
  (_ats2cljpre_stream_auxmain_48 arg0 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_auxmain_48[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret127 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_auxmain_48
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_49__closurerize env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_49[env0 env1]
(
with-local-vars
[
;;knd = 0
  tmpret128 nil
  tmp129 nil
  tmp130 nil
  tmp131 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_49
  (ATSINStmpset tmp129 ((ATSfunclo_fclo env0) env0 env1))
  (ATSINStmpset tmp131 (ats2cljpre_add_int1_int1 env1 1))
  (ATSINStmpset tmp130 (_ats2cljpre_stream_auxmain_48 env0 @tmp131))
  (ATSPMVtysum @tmp129 @tmp130)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_cross_stream_list[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret132 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_cross_stream_list
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_53__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_auxmain_51[arg0 arg1 arg2 arg3]
(
with-local-vars
[
;;knd = 0
  tmpret133 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_auxmain_51
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_52__closurerize arg0 arg1 arg2 arg3))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_52[env0 env1 env2 env3]
(
with-local-vars
[
;;knd = 0
  tmpret134 nil
  tmp135 nil
  tmp136 nil
  tmp137 nil
  tmp138 nil
  tmp139 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_52
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons env3)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       (ATSINStmpset tmp137 (ats2cljpre_cross_stream_list env1 env2))
       (ATSPMVlazyval_eval @tmp137)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp135 (ATSSELcon env3 0))
       (ATSINStmpset tmp136 (ATSSELcon env3 1))
       (ATSINStmpset tmp138 (ATSPMVtyrec env0 @tmp135))
       (ATSINStmpset tmp139 (_ats2cljpre_stream_auxmain_51 env0 env1 env2 @tmp136))
       (ATSPMVtysum @tmp138 @tmp139)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_53[env0 env1]
(
with-local-vars
[
;;knd = 0
  tmpret140 nil
  tmp141 nil
  tmp142 nil
  tmp143 nil
  tmp144 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_53
  (ATSINStmpset tmp141 (ATSPMVlazyval_eval env0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp141)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (if (ATSCKptrisnull @tmp141)
         (ATSINScaseof_fail "/Users/RyanKing/ATS2-contrib/contrib/libatscc/DATS/stream.dats: 6907(line=451, offs=1) -- 6999(line=453, offs=50)")
         (do
          (casefnx 4)
         )
       )
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp142 (ATSSELcon @tmp141 0))
       (ATSINStmpset tmp143 (ATSSELcon @tmp141 1))
       (ATSINStmpset tmp144 (_ats2cljpre_stream_auxmain_51 @tmp142 @tmp143 env1 env1))
       (ATSPMVlazyval_eval @tmp144)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_cross_stream_list0[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret145 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_cross_stream_list0
  (ats2cljpre_cross_stream_list arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream2cloref_exn[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret146 nil
  tmp147 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream2cloref_exn
  (ATSINStmpset tmp147 (ats2cljpre_ref arg0))
  (_ats2cljpre_stream_patsfun_56__closurerize @tmp147)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_56[env0]
(
with-local-vars
[
;;knd = 0
  tmpret148 nil
  tmp149 nil
  tmp150 nil
  tmp151 nil
  tmp152 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_56
  (ATSINStmpset tmp149 (ats2cljpre_ref_get_elt env0))
  (ATSINStmpset tmp150 (ATSPMVlazyval_eval @tmp149))
  (if (ATSCKptrisnull @tmp150) (ATSINScaseof_fail "/Users/RyanKing/ATS2-contrib/contrib/libatscc/DATS/stream.dats: 7300(line=479, offs=5) -- 7324(line=479, offs=29)"))
  (ATSINStmpset tmp151 (ATSSELcon @tmp150 0))
  (ATSINStmpset tmp152 (ATSSELcon @tmp150 1))
  (ATSINSmove1_void (ats2cljpre_ref_set_elt env0 @tmp152))
  @tmp151
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream2cloref_opt[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret154 nil
  tmp155 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream2cloref_opt
  (ATSINStmpset tmp155 (ats2cljpre_ref arg0))
  (_ats2cljpre_stream_patsfun_58__closurerize @tmp155)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_58[env0]
(
with-local-vars
[
;;knd = 0
  tmpret156 nil
  tmp157 nil
  tmp158 nil
  tmp159 nil
  tmp160 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_58
  (ATSINStmpset tmp157 (ats2cljpre_ref_get_elt env0))
  (ATSINStmpset tmp158 (ATSPMVlazyval_eval @tmp157))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp158)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp159 (ATSSELcon @tmp158 0))
       (ATSINStmpset tmp160 (ATSSELcon @tmp158 1))
       (ATSINSmove1_void (ats2cljpre_ref_set_elt env0 @tmp160))
       (ATSPMVtysum @tmp159)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream2cloref_last[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret162 nil
  tmp163 nil
  tmp164 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream2cloref_last
  (ATSINStmpset tmp163 (ats2cljpre_ref arg0))
  (ATSINStmpset tmp164 (ats2cljpre_ref arg1))
  (_ats2cljpre_stream_patsfun_60__closurerize @tmp163 @tmp164)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_60[env0 env1]
(
with-local-vars
[
;;knd = 0
  tmpret165 nil
  tmp166 nil
  tmp167 nil
  tmp168 nil
  tmp169 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_60
  (ATSINStmpset tmp166 (ats2cljpre_ref_get_elt env0))
  (ATSINStmpset tmp167 (ATSPMVlazyval_eval @tmp166))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp167)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       (ats2cljpre_ref_get_elt env1)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp168 (ATSSELcon @tmp167 0))
       (ATSINStmpset tmp169 (ATSSELcon @tmp167 1))
       (ATSINSmove1_void (ats2cljpre_ref_set_elt env0 @tmp169))
       (ATSINSmove1_void (ats2cljpre_ref_set_elt env1 @tmp168))
       @tmp168
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_take_while_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret172 nil
  tmp173 nil
  tmp174 nil
  tmp175 nil
  tmp176 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_take_while_cloref
  (ATSINStmpset tmp173 (ats2cljpre_stream_rtake_while_cloref arg0 arg1))
  (ATSINStmpset tmp174 (ATSSELboxrec @tmp173 0))
  (ATSINStmpset tmp175 (ATSSELboxrec @tmp173 1))
  (ATSINStmpset tmp176 (ats2cljpre_list_reverse @tmp175))
  (ATSPMVtyrec @tmp174 @tmp176)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_rtake_while_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret177 nil
  tmp185 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_rtake_while_cloref
  (ATSINStmpset tmp185 atscc2clj_null)
  (_ats2cljpre_stream_loop_63 arg1 arg0 0 @tmp185)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_loop_63[env0 arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
  tmpret178 nil
  tmp179 nil
  tmp180 nil
  tmp181 nil
  tmp182 nil
  tmp183 nil
  tmp184 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
     arg2 arg2
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_loop_63
    (ATSINStmpset tmp179 (ATSPMVlazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp179)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         (ATSPMVtyrec arg0 arg2)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp180 (ATSSELcon @tmp179 0))
         (ATSINStmpset tmp181 (ATSSELcon @tmp179 1))
         (ATSINStmpset tmp182 ((ATSfunclo_fclo env0) env0 arg1 @tmp180))
         (if @tmp182
           (do
            (ATSINStmpset tmp183 (ats2cljpre_add_int1_int1 arg1 1))
            (ATSINStmpset tmp184 (ATSPMVtysum @tmp180 arg2))
            ;; apy0 = @tmp181
            ;; apy1 = @tmp183
            ;; apy2 = @tmp184
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; arg2 = apy2
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_loop_63
            (_ats2cljpre_stream_loop_63 env0 @tmp181 @tmp183 @tmp184)
           ) ;; if-then
           (do
            (ATSPMVtyrec arg0 arg2)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret178;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_take_until_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret186 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_take_until_cloref
  (ats2cljpre_stream_take_while_cloref arg0 (_ats2cljpre_stream_patsfun_65__closurerize arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_65[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret187 nil
  tmp188 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_65
  (ATSINStmpset tmp188 ((ATSfunclo_fclo env0) env0 arg0 arg1))
  (ats2cljpre_neg_bool0 @tmp188)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_rtake_until_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret189 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_rtake_until_cloref
  (ats2cljpre_stream_rtake_while_cloref arg0 (_ats2cljpre_stream_patsfun_67__closurerize arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_67[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret190 nil
  tmp191 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_67
  (ATSINStmpset tmp191 ((ATSfunclo_fclo env0) env0 arg0 arg1))
  (ats2cljpre_neg_bool0 @tmp191)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_list_xprod2[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret192 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_list_xprod2
  (_ats2cljpre_stream_auxlst_71 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_aux_69[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret193 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_aux_69
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_70__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_70[env0 env1]
(
with-local-vars
[
;;knd = 0
  tmpret194 nil
  tmp195 nil
  tmp196 nil
  tmp197 nil
  tmp198 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_70
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons env1)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp195 (ATSSELcon env1 0))
       (ATSINStmpset tmp196 (ATSSELcon env1 1))
       (ATSINStmpset tmp197 (ATSPMVtyrec env0 @tmp195))
       (ATSINStmpset tmp198 (_ats2cljpre_stream_aux_69 env0 @tmp196))
       (ATSPMVtysum @tmp197 @tmp198)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_auxlst_71[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret199 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_auxlst_71
  (ATSPMVlazyval (_ats2cljpre_stream_patsfun_72__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_patsfun_72[env0 env1]
(
with-local-vars
[
;;knd = 0
  tmpret200 nil
  tmp201 nil
  tmp202 nil
  tmp203 nil
  tmp204 nil
  tmp205 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_patsfun_72
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons env0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp201 (ATSSELcon env0 0))
       (ATSINStmpset tmp202 (ATSSELcon env0 1))
       (ATSINStmpset tmp204 (_ats2cljpre_stream_aux_69 @tmp201 env1))
       (ATSINStmpset tmp205 (_ats2cljpre_stream_auxlst_71 @tmp202 env1))
       (ATSINStmpset tmp203 (ats2cljpre_stream_append @tmp204 @tmp205))
       (ATSPMVlazyval_eval @tmp203)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun

;;;;;;
;;
;; end-of-compilation-unit
;;
;;;;;;
