;;;;;;
;;
;; The Clojure code is generated by atscc2clj
;; The starting compilation time is: 2016-12-25: 17h:42m
;;
;;;;;;
(declare _ats2cljpre_intrange_loop_2)
(declare _ats2cljpre_intrange_patsfun_4)
(declare _ats2cljpre_intrange_patsfun_9)
(declare _ats2cljpre_intrange_patsfun_11)
(declare _ats2cljpre_intrange_patsfun_13)
(declare _ats2cljpre_intrange_patsfun_16)
(declare _ats2cljpre_intrange_aux_18)
(declare _ats2cljpre_intrange_patsfun_20)
(declare _ats2cljpre_intrange_patsfun_23)
(declare _ats2cljpre_intrange_aux_25)
(declare _ats2cljpre_intrange_patsfun_26)
(declare _ats2cljpre_intrange_patsfun_28)
(declare _ats2cljpre_intrange_aux_30)
(declare _ats2cljpre_intrange_patsfun_31)
(declare _ats2cljpre_intrange_patsfun_33)
(declare _ats2cljpre_intrange_loop_38)
(declare _ats2cljpre_intrange_patsfun_40)
(declare _ats2cljpre_intrange_loop_42)
(declare _ats2cljpre_intrange_patsfun_44)
(declare _ats2cljpre_intrange_loop_46)
(declare _ats2cljpre_intrange_patsfun_48)
(declare _ats2cljpre_intrange_loop_50)
(declare _ats2cljpre_intrange_patsfun_52)
(declare _ats2cljpre_intrange_loop1_54)
(declare _ats2cljpre_intrange_loop1_57)
(declare _ats2cljpre_intrange_loop1_60)
(declare ats2cljpre_int_repeat_lazy)
(declare ats2cljpre_int_repeat_cloref)
(declare _ats2cljpre_intrange_loop_2)
(declare ats2cljpre_int_repeat_method)
(declare _ats2cljpre_intrange_patsfun_4)
(declare ats2cljpre_int_exists_cloref)
(declare ats2cljpre_int_forall_cloref)
(declare ats2cljpre_int_foreach_cloref)
(declare ats2cljpre_int_exists_method)
(declare _ats2cljpre_intrange_patsfun_9)
(declare ats2cljpre_int_forall_method)
(declare _ats2cljpre_intrange_patsfun_11)
(declare ats2cljpre_int_foreach_method)
(declare _ats2cljpre_intrange_patsfun_13)
(declare ats2cljpre_int_foldleft_cloref)
(declare ats2cljpre_int_foldleft_method)
(declare _ats2cljpre_intrange_patsfun_16)
(declare ats2cljpre_int_list_map_cloref)
(declare _ats2cljpre_intrange_aux_18)
(declare ats2cljpre_int_list_map_method)
(declare _ats2cljpre_intrange_patsfun_20)
(declare ats2cljpre_int_list0_map_cloref)
(declare ats2cljpre_int_list0_map_method)
(declare _ats2cljpre_intrange_patsfun_23)
(declare ats2cljpre_int_stream_map_cloref)
(declare _ats2cljpre_intrange_aux_25)
(declare _ats2cljpre_intrange_patsfun_26)
(declare ats2cljpre_int_stream_map_method)
(declare _ats2cljpre_intrange_patsfun_28)
(declare ats2cljpre_int_stream_vt_map_cloref)
(declare _ats2cljpre_intrange_aux_30)
(declare _ats2cljpre_intrange_patsfun_31)
(declare ats2cljpre_int_stream_vt_map_method)
(declare _ats2cljpre_intrange_patsfun_33)
(declare ats2cljpre_int2_exists_cloref)
(declare ats2cljpre_int2_forall_cloref)
(declare ats2cljpre_int2_foreach_cloref)
(declare ats2cljpre_intrange_exists_cloref)
(declare _ats2cljpre_intrange_loop_38)
(declare ats2cljpre_intrange_exists_method)
(declare _ats2cljpre_intrange_patsfun_40)
(declare ats2cljpre_intrange_forall_cloref)
(declare _ats2cljpre_intrange_loop_42)
(declare ats2cljpre_intrange_forall_method)
(declare _ats2cljpre_intrange_patsfun_44)
(declare ats2cljpre_intrange_foreach_cloref)
(declare _ats2cljpre_intrange_loop_46)
(declare ats2cljpre_intrange_foreach_method)
(declare _ats2cljpre_intrange_patsfun_48)
(declare ats2cljpre_intrange_foldleft_cloref)
(declare _ats2cljpre_intrange_loop_50)
(declare ats2cljpre_intrange_foldleft_method)
(declare _ats2cljpre_intrange_patsfun_52)
(declare ats2cljpre_intrange2_exists_cloref)
(declare _ats2cljpre_intrange_loop1_54)
(declare ats2cljpre_intrange2_forall_cloref)
(declare _ats2cljpre_intrange_loop1_57)
(declare ats2cljpre_intrange2_foreach_cloref)
(declare _ats2cljpre_intrange_loop1_60)
;;;;;;


(defn
_ats2cljpre_intrange_patsfun_4__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_4 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_9__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_9 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_11__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_11 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_13__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_13 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_16__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_16 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_20__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_20 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_23__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_23 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_26__closurerize[xenv0 xenv1 xenv2]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_intrange_patsfun_26 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) (ATSCCget_3 _fcenvs_))) xenv0 xenv1 xenv2)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_28__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_28 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_31__closurerize[xenv0 xenv1 xenv2]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_31 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) (ATSCCget_3 _fcenvs_) xarg0)) xenv0 xenv1 xenv2)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_33__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_33 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_40__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_40 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_44__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_44 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_48__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_48 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_intrange_patsfun_52__closurerize[xenv0 xenv1 xenv2]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_intrange_patsfun_52 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) (ATSCCget_3 _fcenvs_) xarg0)) xenv0 xenv1 xenv2)
;;%}
) ;; end-of-defn


;;fun
(defn
 ats2cljpre_int_repeat_lazy[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmp1 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_repeat_lazy
  (ATSINStmpset tmp1 (ats2cljpre_lazy2cloref arg1))
  (ATSINSmove1_void (ats2cljpre_int_repeat_cloref arg0 @tmp1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_repeat_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_repeat_cloref
  (ATSINSmove1_void (_ats2cljpre_intrange_loop_2 arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_loop_2[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmp4 nil
  tmp6 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_intrange_loop_2
    (ATSINStmpset tmp4 (ats2cljpre_gt_int0_int0 arg0 0))
    (if @tmp4
      (do
       (ATSINSmove1_void ((ATSfunclo_fclo arg1) arg1))
       (ATSINStmpset tmp6 (ats2cljpre_sub_int0_int0 arg0 1))
       ;; apy0 = @tmp6
       ;; apy1 = arg1
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_intrange_loop_2
       (recur @tmp6 arg1)
      ) ;; if-then
      (do
       ATSINSmove0_void
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_repeat_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret7 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_repeat_method
  (_ats2cljpre_intrange_patsfun_4__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_4[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_4
  (ATSINSmove1_void (ats2cljpre_int_repeat_cloref env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_exists_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret9 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_exists_cloref
  (ats2cljpre_intrange_exists_cloref 0 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_forall_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret10 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_forall_cloref
  (ats2cljpre_intrange_forall_cloref 0 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_foreach_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_foreach_cloref
  (ATSINSmove1_void (ats2cljpre_intrange_foreach_cloref 0 arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_exists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret12 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_exists_method
  (_ats2cljpre_intrange_patsfun_9__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_9[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret13 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_9
  (ats2cljpre_int_exists_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_forall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret14 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_forall_method
  (_ats2cljpre_intrange_patsfun_11__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_11[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret15 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_11
  (ats2cljpre_int_forall_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_foreach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret16 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_foreach_method
  (_ats2cljpre_intrange_patsfun_13__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_13[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_13
  (ATSINSmove1_void (ats2cljpre_int_foreach_cloref env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_foldleft_cloref[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret18 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_foldleft_cloref
  (ats2cljpre_intrange_foldleft_cloref 0 arg0 arg1 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_foldleft_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret19 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_foldleft_method
  (_ats2cljpre_intrange_patsfun_16__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_16[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret20 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_16
  (ats2cljpre_int_foldleft_cloref env0 env1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_list_map_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret21 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_list_map_cloref
  (_ats2cljpre_intrange_aux_18 arg0 arg1 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_aux_18[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret22 nil
  tmp23 nil
  tmp24 nil
  tmp25 nil
  tmp26 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_aux_18
  (ATSINStmpset tmp23 (ats2cljpre_lt_int1_int1 arg0 env0))
  (if @tmp23
    (do
     (ATSINStmpset tmp24 ((ATSfunclo_fclo env1) env1 arg0))
     (ATSINStmpset tmp26 (ats2cljpre_add_int1_int1 arg0 1))
     (ATSINStmpset tmp25 (_ats2cljpre_intrange_aux_18 env0 env1 @tmp26))
     (ATSPMVtysum @tmp24 @tmp25)
    ) ;; if-then
    (do
     atscc2clj_null
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_list_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret27 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_list_map_method
  (_ats2cljpre_intrange_patsfun_20__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_20[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret28 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_20
  (ats2cljpre_int_list_map_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_list0_map_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret29 nil
  tmp30 nil
  tmp31 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_list0_map_cloref
  (ATSINStmpset tmp30 (ats2cljpre_gte_int1_int1 arg0 0))
  (if @tmp30
    (do
     (ATSINStmpset tmp31 (ats2cljpre_int_list_map_cloref arg0 arg1))
     @tmp31
    ) ;; if-then
    (do
     atscc2clj_null
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_list0_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret32 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_list0_map_method
  (_ats2cljpre_intrange_patsfun_23__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_23[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret33 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_23
  (ats2cljpre_int_list0_map_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_stream_map_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret34 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_stream_map_cloref
  (_ats2cljpre_intrange_aux_25 arg0 arg1 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_aux_25[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret35 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_aux_25
  (ATSPMVlazyval (_ats2cljpre_intrange_patsfun_26__closurerize env0 env1 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_26[env0 env1 env2]
(
with-local-vars
[
;;knd = 0
  tmpret36 nil
  tmp37 nil
  tmp38 nil
  tmp39 nil
  tmp40 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_26
  (ATSINStmpset tmp37 (ats2cljpre_lt_int1_int1 env2 env0))
  (if @tmp37
    (do
     (ATSINStmpset tmp38 ((ATSfunclo_fclo env1) env1 env2))
     (ATSINStmpset tmp40 (ats2cljpre_add_int1_int1 env2 1))
     (ATSINStmpset tmp39 (_ats2cljpre_intrange_aux_25 env0 env1 @tmp40))
     (ATSPMVtysum @tmp38 @tmp39)
    ) ;; if-then
    (do
     atscc2clj_null
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_stream_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret41 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_stream_map_method
  (_ats2cljpre_intrange_patsfun_28__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_28[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret42 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_28
  (ats2cljpre_int_stream_map_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_stream_vt_map_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret43 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_stream_vt_map_cloref
  (_ats2cljpre_intrange_aux_30 arg0 arg1 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_aux_30[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret44 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_aux_30
  (ATSPMVllazyval (_ats2cljpre_intrange_patsfun_31__closurerize env0 env1 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_31[env0 env1 env2 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret45 nil
  tmp46 nil
  tmp47 nil
  tmp48 nil
  tmp49 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_31
  (if arg0
    (do
     (ATSINStmpset tmp46 (ats2cljpre_lt_int1_int1 env2 env0))
     (if @tmp46
       (do
        (ATSINStmpset tmp47 ((ATSfunclo_fclo env1) env1 env2))
        (ATSINStmpset tmp49 (ats2cljpre_add_int1_int1 env2 1))
        (ATSINStmpset tmp48 (_ats2cljpre_intrange_aux_30 env0 env1 @tmp49))
        (ATSPMVtysum @tmp47 @tmp48)
       ) ;; if-then
       (do
        atscc2clj_null
       ) ;; if-else
     )
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int_stream_vt_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret50 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int_stream_vt_map_method
  (_ats2cljpre_intrange_patsfun_33__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_33[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret51 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_33
  (ats2cljpre_int_stream_vt_map_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int2_exists_cloref[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret52 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int2_exists_cloref
  (ats2cljpre_intrange2_exists_cloref 0 arg0 0 arg1 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int2_forall_cloref[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret53 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int2_forall_cloref
  (ats2cljpre_intrange2_forall_cloref 0 arg0 0 arg1 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_int2_foreach_cloref[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_int2_foreach_cloref
  (ATSINSmove1_void (ats2cljpre_intrange2_foreach_cloref 0 arg0 0 arg1 arg2))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange_exists_cloref[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret55 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange_exists_cloref
  (_ats2cljpre_intrange_loop_38 arg0 arg1 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_loop_38[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
  tmpret56 nil
  tmp57 nil
  tmp58 nil
  tmp59 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
     arg2 arg2
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_intrange_loop_38
    (ATSINStmpset tmp57 (ats2cljpre_lt_int0_int0 arg0 arg1))
    (if @tmp57
      (do
       (ATSINStmpset tmp58 ((ATSfunclo_fclo arg2) arg2 arg0))
       (if @tmp58
         (do
          atscc2clj_true
         ) ;; if-then
         (do
          (ATSINStmpset tmp59 (ats2cljpre_add_int0_int0 arg0 1))
          ;; apy0 = @tmp59
          ;; apy1 = arg1
          ;; apy2 = arg2
          ;; arg0 = apy0
          ;; arg1 = apy1
          ;; arg2 = apy2
          ;; funlab_clj = 1; // __patsflab__ats2cljpre_intrange_loop_38
          (recur @tmp59 arg1 arg2)
         ) ;; if-else
       )
      ) ;; if-then
      (do
       atscc2clj_false
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret56;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange_exists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret60 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange_exists_method
  (_ats2cljpre_intrange_patsfun_40__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_40[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret61 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_40
  (ats2cljpre_intrange_exists_cloref (ATSSELboxrec env0 0) (ATSSELboxrec env0 1) arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange_forall_cloref[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret62 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange_forall_cloref
  (_ats2cljpre_intrange_loop_42 arg0 arg1 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_loop_42[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
  tmpret63 nil
  tmp64 nil
  tmp65 nil
  tmp66 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
     arg2 arg2
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_intrange_loop_42
    (ATSINStmpset tmp64 (ats2cljpre_lt_int0_int0 arg0 arg1))
    (if @tmp64
      (do
       (ATSINStmpset tmp65 ((ATSfunclo_fclo arg2) arg2 arg0))
       (if @tmp65
         (do
          (ATSINStmpset tmp66 (ats2cljpre_add_int0_int0 arg0 1))
          ;; apy0 = @tmp66
          ;; apy1 = arg1
          ;; apy2 = arg2
          ;; arg0 = apy0
          ;; arg1 = apy1
          ;; arg2 = apy2
          ;; funlab_clj = 1; // __patsflab__ats2cljpre_intrange_loop_42
          (recur @tmp66 arg1 arg2)
         ) ;; if-then
         (do
          atscc2clj_false
         ) ;; if-else
       )
      ) ;; if-then
      (do
       atscc2clj_true
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret63;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange_forall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret67 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange_forall_method
  (_ats2cljpre_intrange_patsfun_44__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_44[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret68 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_44
  (ats2cljpre_intrange_forall_cloref (ATSSELboxrec env0 0) (ATSSELboxrec env0 1) arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange_foreach_cloref[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange_foreach_cloref
  (ATSINSmove1_void (_ats2cljpre_intrange_loop_46 arg0 arg1 arg2))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_loop_46[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
  tmp71 nil
  tmp73 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
     arg2 arg2
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_intrange_loop_46
    (ATSINStmpset tmp71 (ats2cljpre_lt_int0_int0 arg0 arg1))
    (if @tmp71
      (do
       (ATSINSmove1_void ((ATSfunclo_fclo arg2) arg2 arg0))
       (ATSINStmpset tmp73 (ats2cljpre_add_int0_int0 arg0 1))
       ;; apy0 = @tmp73
       ;; apy1 = arg1
       ;; apy2 = arg2
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; arg2 = apy2
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_intrange_loop_46
       (recur @tmp73 arg1 arg2)
      ) ;; if-then
      (do
       ATSINSmove0_void
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange_foreach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret74 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange_foreach_method
  (_ats2cljpre_intrange_patsfun_48__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_48[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_48
  (ATSINSmove1_void (ats2cljpre_intrange_foreach_cloref (ATSSELboxrec env0 0) (ATSSELboxrec env0 1) arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange_foldleft_cloref[arg0 arg1 arg2 arg3]
(
with-local-vars
[
;;knd = 0
  tmpret76 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange_foldleft_cloref
  (_ats2cljpre_intrange_loop_50 arg3 arg0 arg1 arg2 arg3)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_loop_50[env0 arg0 arg1 arg2 arg3]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
;;apy3 nil
  tmpret77 nil
  tmp78 nil
  tmp79 nil
  tmp80 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
     arg2 arg2
     arg3 arg3
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_intrange_loop_50
    (ATSINStmpset tmp78 (ats2cljpre_lt_int0_int0 arg0 arg1))
    (if @tmp78
      (do
       (ATSINStmpset tmp79 (ats2cljpre_add_int0_int0 arg0 1))
       (ATSINStmpset tmp80 ((ATSfunclo_fclo arg3) arg3 arg2 arg0))
       ;; apy0 = @tmp79
       ;; apy1 = arg1
       ;; apy2 = @tmp80
       ;; apy3 = env0
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; arg2 = apy2
       ;; arg3 = apy3
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_intrange_loop_50
       (recur env0 @tmp79 arg1 @tmp80 env0)
      ) ;; if-then
      (do
       arg2
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret77;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange_foldleft_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmp81 nil
  tmp82 nil
  tmpret83 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange_foldleft_method
  (ATSINStmpset tmp81 (ATSSELboxrec arg0 0))
  (ATSINStmpset tmp82 (ATSSELboxrec arg0 1))
  (_ats2cljpre_intrange_patsfun_52__closurerize @tmp81 @tmp82 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_patsfun_52[env0 env1 env2 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret84 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_intrange_patsfun_52
  (ats2cljpre_intrange_foldleft_cloref env0 env1 env2 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange2_exists_cloref[arg0 arg1 arg2 arg3 arg4]
(
with-local-vars
[
;;knd = 0
  tmpret85 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange2_exists_cloref
  (_ats2cljpre_intrange_loop1_54 arg2 arg3 arg4 arg0 arg1 arg2 arg3 arg4)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_loop1_54[env0 env1 env2 arg0 arg1 arg2 arg3 arg4]
(declare
 _ats2cljpre_intrange_loop1_54__
)
(_ats2cljpre_intrange_loop1_54__ 1 env0 env1 env2 arg0 arg1 arg2 arg3 arg4)
) ;; end-of-fun
(defn
_ats2cljpre_intrange_loop1_54__[funlab env0 env1 env2 arg0 arg1 arg2 arg3 arg4]
(
with-local-vars
[
;;knd = 2
;;apy0 nil
;;apy1 nil
;;apy2 nil
;;apy3 nil
;;apy4 nil
  tmpret86 nil
  tmp87 nil
;;a2rg0 nil
;;a2rg1 nil
;;a2rg2 nil
;;a2rg3 nil
;;a2rg4 nil
;;a2py0 nil
;;a2py1 nil
;;a2py2 nil
;;a2py3 nil
;;a2py4 nil
  tmpret88 nil
  tmp89 nil
  tmp90 nil
  tmp91 nil
  tmp92 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; funlab_clj = 1;
  ;while(true){
   (loop [
     funlab
     funlab
     env0 env0
     env1 env1
     env2 env2
     arg0 arg0
     arg1 arg1
     arg2 arg2
     arg3 arg3
     arg4 arg4
    ] ;switch(funlab_clj) {
    (case funlab
      ;case 1: {
      1 (do
        ;; funlab_clj = 0;
        (ATSINStmpset tmp87 (ats2cljpre_lt_int0_int0 arg0 arg1))
        (if @tmp87
          (do
           ;; a2py0 = arg0
           ;; a2py1 = arg1
           ;; a2py2 = arg2
           ;; a2py3 = arg3
           ;; a2py4 = env2
           ;; a2rg0 = a2py0
           ;; a2rg1 = a2py1
           ;; a2rg2 = a2py2
           ;; a2rg3 = a2py3
           ;; a2rg4 = a2py4
           ;; funlab_clj = 2; // __patsflab__ats2cljpre_intrange_loop2_55
           (recur 2 env0 env1 env2 arg0 arg1 arg2 arg3 env2)
          ) ;; if-then
          (do
           atscc2clj_false
          ) ;; if-else
        );
        ;; if (funlab_clj > 0) continue; else ;; return tmpret86;
      ) ;} // end-of-case
      ;case 2: {
      2 (do
        ;; funlab_clj = 0;
        (ATSINStmpset tmp89 (ats2cljpre_lt_int0_int0 arg2 arg3))
        (if @tmp89
          (do
           (ATSINStmpset tmp90 ((ATSfunclo_fclo arg4) arg4 arg0 arg2))
           (if @tmp90
             (do
              atscc2clj_true
             ) ;; if-then
             (do
              (ATSINStmpset tmp91 (ats2cljpre_add_int0_int0 arg2 1))
              ;; a2py0 = arg0
              ;; a2py1 = arg1
              ;; a2py2 = @tmp91
              ;; a2py3 = arg3
              ;; a2py4 = arg4
              ;; a2rg0 = a2py0
              ;; a2rg1 = a2py1
              ;; a2rg2 = a2py2
              ;; a2rg3 = a2py3
              ;; a2rg4 = a2py4
              ;; funlab_clj = 2; // __patsflab__ats2cljpre_intrange_loop2_55
              (recur 2 env0 env1 env2 arg0 arg1 @tmp91 arg3 arg4)
             ) ;; if-else
           )
          ) ;; if-then
          (do
           (ATSINStmpset tmp92 (ats2cljpre_add_int0_int0 arg0 1))
           ;; apy0 = @tmp92
           ;; apy1 = arg1
           ;; apy2 = env0
           ;; apy3 = env1
           ;; apy4 = arg4
           ;; arg0 = apy0
           ;; arg1 = apy1
           ;; arg2 = apy2
           ;; arg3 = apy3
           ;; arg4 = apy4
           ;; funlab_clj = 1; // __patsflab__ats2cljpre_intrange_loop1_54
           (recur 1 env0 env1 env2 @tmp92 arg1 env0 env1 arg4)
          ) ;; if-else
        );
        ;; if (funlab_clj > 0) continue; else ;; return tmpret88;
      ) ;} // end-of-case
    ) ;} // end-of-switch
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange2_forall_cloref[arg0 arg1 arg2 arg3 arg4]
(
with-local-vars
[
;;knd = 0
  tmpret93 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange2_forall_cloref
  (_ats2cljpre_intrange_loop1_57 arg2 arg3 arg0 arg1 arg2 arg3 arg4)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_loop1_57[env0 env1 arg0 arg1 arg2 arg3 arg4]
(declare
 _ats2cljpre_intrange_loop1_57__
)
(_ats2cljpre_intrange_loop1_57__ 1 env0 env1 arg0 arg1 arg2 arg3 arg4)
) ;; end-of-fun
(defn
_ats2cljpre_intrange_loop1_57__[funlab env0 env1 arg0 arg1 arg2 arg3 arg4]
(
with-local-vars
[
;;knd = 2
;;apy0 nil
;;apy1 nil
;;apy2 nil
;;apy3 nil
;;apy4 nil
  tmpret94 nil
  tmp95 nil
;;a2rg0 nil
;;a2rg1 nil
;;a2rg2 nil
;;a2rg3 nil
;;a2rg4 nil
;;a2py0 nil
;;a2py1 nil
;;a2py2 nil
;;a2py3 nil
;;a2py4 nil
  tmpret96 nil
  tmp97 nil
  tmp98 nil
  tmp99 nil
  tmp100 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; funlab_clj = 1;
  ;while(true){
   (loop [
     funlab
     funlab
     env0 env0
     env1 env1
     arg0 arg0
     arg1 arg1
     arg2 arg2
     arg3 arg3
     arg4 arg4
    ] ;switch(funlab_clj) {
    (case funlab
      ;case 1: {
      1 (do
        ;; funlab_clj = 0;
        (ATSINStmpset tmp95 (ats2cljpre_lt_int0_int0 arg0 arg1))
        (if @tmp95
          (do
           ;; a2py0 = arg0
           ;; a2py1 = arg1
           ;; a2py2 = arg2
           ;; a2py3 = arg3
           ;; a2py4 = arg4
           ;; a2rg0 = a2py0
           ;; a2rg1 = a2py1
           ;; a2rg2 = a2py2
           ;; a2rg3 = a2py3
           ;; a2rg4 = a2py4
           ;; funlab_clj = 2; // __patsflab__ats2cljpre_intrange_loop2_58
           (recur 2 env0 env1 arg0 arg1 arg2 arg3 arg4)
          ) ;; if-then
          (do
           atscc2clj_true
          ) ;; if-else
        );
        ;; if (funlab_clj > 0) continue; else ;; return tmpret94;
      ) ;} // end-of-case
      ;case 2: {
      2 (do
        ;; funlab_clj = 0;
        (ATSINStmpset tmp97 (ats2cljpre_lt_int0_int0 arg2 arg3))
        (if @tmp97
          (do
           (ATSINStmpset tmp98 ((ATSfunclo_fclo arg4) arg4 arg0 arg2))
           (if @tmp98
             (do
              (ATSINStmpset tmp99 (ats2cljpre_add_int0_int0 arg2 1))
              ;; a2py0 = arg0
              ;; a2py1 = arg1
              ;; a2py2 = @tmp99
              ;; a2py3 = arg3
              ;; a2py4 = arg4
              ;; a2rg0 = a2py0
              ;; a2rg1 = a2py1
              ;; a2rg2 = a2py2
              ;; a2rg3 = a2py3
              ;; a2rg4 = a2py4
              ;; funlab_clj = 2; // __patsflab__ats2cljpre_intrange_loop2_58
              (recur 2 env0 env1 arg0 arg1 @tmp99 arg3 arg4)
             ) ;; if-then
             (do
              atscc2clj_false
             ) ;; if-else
           )
          ) ;; if-then
          (do
           (ATSINStmpset tmp100 (ats2cljpre_add_int0_int0 arg0 1))
           ;; apy0 = @tmp100
           ;; apy1 = arg1
           ;; apy2 = env0
           ;; apy3 = env1
           ;; apy4 = arg4
           ;; arg0 = apy0
           ;; arg1 = apy1
           ;; arg2 = apy2
           ;; arg3 = apy3
           ;; arg4 = apy4
           ;; funlab_clj = 1; // __patsflab__ats2cljpre_intrange_loop1_57
           (recur 1 env0 env1 @tmp100 arg1 env0 env1 arg4)
          ) ;; if-else
        );
        ;; if (funlab_clj > 0) continue; else ;; return tmpret96;
      ) ;} // end-of-case
    ) ;} // end-of-switch
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_intrange2_foreach_cloref[arg0 arg1 arg2 arg3 arg4]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_intrange2_foreach_cloref
  (ATSINSmove1_void (_ats2cljpre_intrange_loop1_60 arg2 arg3 arg0 arg1 arg2 arg3 arg4))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_intrange_loop1_60[env0 env1 arg0 arg1 arg2 arg3 arg4]
(declare
 _ats2cljpre_intrange_loop1_60__
)
(_ats2cljpre_intrange_loop1_60__ 1 env0 env1 arg0 arg1 arg2 arg3 arg4)
) ;; end-of-fun
(defn
_ats2cljpre_intrange_loop1_60__[funlab env0 env1 arg0 arg1 arg2 arg3 arg4]
(
with-local-vars
[
;;knd = 2
;;apy0 nil
;;apy1 nil
;;apy2 nil
;;apy3 nil
;;apy4 nil
  tmp103 nil
;;a2rg0 nil
;;a2rg1 nil
;;a2rg2 nil
;;a2rg3 nil
;;a2rg4 nil
;;a2py0 nil
;;a2py1 nil
;;a2py2 nil
;;a2py3 nil
;;a2py4 nil
  tmp105 nil
  tmp107 nil
  tmp108 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; funlab_clj = 1;
  ;while(true){
   (loop [
     funlab
     funlab
     env0 env0
     env1 env1
     arg0 arg0
     arg1 arg1
     arg2 arg2
     arg3 arg3
     arg4 arg4
    ] ;switch(funlab_clj) {
    (case funlab
      ;case 1: {
      1 (do
        ;; funlab_clj = 0;
        (ATSINStmpset tmp103 (ats2cljpre_lt_int0_int0 arg0 arg1))
        (if @tmp103
          (do
           ;; a2py0 = arg0
           ;; a2py1 = arg1
           ;; a2py2 = arg2
           ;; a2py3 = arg3
           ;; a2py4 = arg4
           ;; a2rg0 = a2py0
           ;; a2rg1 = a2py1
           ;; a2rg2 = a2py2
           ;; a2rg3 = a2py3
           ;; a2rg4 = a2py4
           ;; funlab_clj = 2; // __patsflab__ats2cljpre_intrange_loop2_61
           (recur 2 env0 env1 arg0 arg1 arg2 arg3 arg4)
          ) ;; if-then
          (do
           ATSINSmove0_void
          ) ;; if-else
        );
        ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
      ) ;} // end-of-case
      ;case 2: {
      2 (do
        ;; funlab_clj = 0;
        (ATSINStmpset tmp105 (ats2cljpre_lt_int0_int0 arg2 arg3))
        (if @tmp105
          (do
           (ATSINSmove1_void ((ATSfunclo_fclo arg4) arg4 arg0 arg2))
           (ATSINStmpset tmp107 (ats2cljpre_add_int0_int0 arg2 1))
           ;; a2py0 = arg0
           ;; a2py1 = arg1
           ;; a2py2 = @tmp107
           ;; a2py3 = arg3
           ;; a2py4 = arg4
           ;; a2rg0 = a2py0
           ;; a2rg1 = a2py1
           ;; a2rg2 = a2py2
           ;; a2rg3 = a2py3
           ;; a2rg4 = a2py4
           ;; funlab_clj = 2; // __patsflab__ats2cljpre_intrange_loop2_61
           (recur 2 env0 env1 arg0 arg1 @tmp107 arg3 arg4)
          ) ;; if-then
          (do
           (ATSINStmpset tmp108 (ats2cljpre_succ_int0 arg0))
           ;; apy0 = @tmp108
           ;; apy1 = arg1
           ;; apy2 = env0
           ;; apy3 = env1
           ;; apy4 = arg4
           ;; arg0 = apy0
           ;; arg1 = apy1
           ;; arg2 = apy2
           ;; arg3 = apy3
           ;; arg4 = apy4
           ;; funlab_clj = 1; // __patsflab__ats2cljpre_intrange_loop1_60
           (recur 1 env0 env1 @tmp108 arg1 env0 env1 arg4)
          ) ;; if-else
        );
        ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
      ) ;} // end-of-case
    ) ;} // end-of-switch
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun

;;;;;;
;;
;; end-of-compilation-unit
;;
;;;;;;
