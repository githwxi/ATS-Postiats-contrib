;;;;;;
;;
;; The Clojure code is generated by atscc2clj
;; The starting compilation time is: 2016-12-25: 17h:42m
;;
;;;;;;
(declare _ats2cljpre_stream_vt_aux_6)
(declare _ats2cljpre_stream_vt_patsfun_7)
(declare _ats2cljpre_stream_vt_auxmain_9)
(declare _ats2cljpre_stream_vt_patsfun_10)
(declare _ats2cljpre_stream_vt_loop_12)
(declare _ats2cljpre_stream_vt_aux_14)
(declare _ats2cljpre_stream_vt_loop_16)
(declare _ats2cljpre_stream_vt_auxmain_18)
(declare _ats2cljpre_stream_vt_patsfun_19)
(declare _ats2cljpre_stream_vt_auxmain_21)
(declare _ats2cljpre_stream_vt_patsfun_22)
(declare _ats2cljpre_stream_vt_auxmain_24)
(declare _ats2cljpre_stream_vt_patsfun_25)
(declare _ats2cljpre_stream_vt_patsfun_27)
(declare _ats2cljpre_stream_vt_auxmain_29)
(declare _ats2cljpre_stream_vt_patsfun_30)
(declare _ats2cljpre_stream_vt_patsfun_32)
(declare _ats2cljpre_stream_vt_loop_34)
(declare _ats2cljpre_stream_vt_patsfun_36)
(declare _ats2cljpre_stream_vt_loop_38)
(declare _ats2cljpre_stream_vt_patsfun_40)
(declare _ats2cljpre_stream_vt_loop_42)
(declare _ats2cljpre_stream_vt_patsfun_44)
(declare _ats2cljpre_stream_vt_loop_46)
(declare _ats2cljpre_stream_vt_patsfun_48)
(declare _ats2cljpre_stream_vt_auxmain_50)
(declare _ats2cljpre_stream_vt_patsfun_52)
(declare _ats2cljpre_stream_vt_auxmain_54)
(declare _ats2cljpre_stream_vt_patsfun_55)
(declare ats2cljpre_stream_vt_free)
(declare ats2cljpre_stream_vt2t)
(declare _ats2cljpre_stream_vt_aux_6)
(declare _ats2cljpre_stream_vt_patsfun_7)
(declare ats2cljpre_stream_vt_takeLte)
(declare _ats2cljpre_stream_vt_auxmain_9)
(declare _ats2cljpre_stream_vt_patsfun_10)
(declare ats2cljpre_stream_vt_length)
(declare _ats2cljpre_stream_vt_loop_12)
(declare ats2cljpre_stream2list_vt)
(declare _ats2cljpre_stream_vt_aux_14)
(declare ats2cljpre_stream2list_vt_rev)
(declare _ats2cljpre_stream_vt_loop_16)
(declare ats2cljpre_stream_vt_append)
(declare _ats2cljpre_stream_vt_auxmain_18)
(declare _ats2cljpre_stream_vt_patsfun_19)
(declare ats2cljpre_stream_vt_concat)
(declare _ats2cljpre_stream_vt_auxmain_21)
(declare _ats2cljpre_stream_vt_patsfun_22)
(declare ats2cljpre_stream_vt_map_cloref)
(declare _ats2cljpre_stream_vt_auxmain_24)
(declare _ats2cljpre_stream_vt_patsfun_25)
(declare ats2cljpre_stream_vt_map_method)
(declare _ats2cljpre_stream_vt_patsfun_27)
(declare ats2cljpre_stream_vt_filter_cloref)
(declare _ats2cljpre_stream_vt_auxmain_29)
(declare _ats2cljpre_stream_vt_patsfun_30)
(declare ats2cljpre_stream_vt_filter_method)
(declare _ats2cljpre_stream_vt_patsfun_32)
(declare ats2cljpre_stream_vt_exists_cloref)
(declare _ats2cljpre_stream_vt_loop_34)
(declare ats2cljpre_stream_vt_exists_method)
(declare _ats2cljpre_stream_vt_patsfun_36)
(declare ats2cljpre_stream_vt_forall_cloref)
(declare _ats2cljpre_stream_vt_loop_38)
(declare ats2cljpre_stream_vt_forall_method)
(declare _ats2cljpre_stream_vt_patsfun_40)
(declare ats2cljpre_stream_vt_foreach_cloref)
(declare _ats2cljpre_stream_vt_loop_42)
(declare ats2cljpre_stream_vt_foreach_method)
(declare _ats2cljpre_stream_vt_patsfun_44)
(declare ats2cljpre_stream_vt_iforeach_cloref)
(declare _ats2cljpre_stream_vt_loop_46)
(declare ats2cljpre_stream_vt_iforeach_method)
(declare _ats2cljpre_stream_vt_patsfun_48)
(declare ats2cljpre_stream_vt_rforeach_cloref)
(declare _ats2cljpre_stream_vt_auxmain_50)
(declare ats2cljpre_stream_vt_rforeach_method)
(declare _ats2cljpre_stream_vt_patsfun_52)
(declare ats2cljpre_stream_vt_tabulate_cloref)
(declare _ats2cljpre_stream_vt_auxmain_54)
(declare _ats2cljpre_stream_vt_patsfun_55)
;;;;;;


(defn
_ats2cljpre_stream_vt_patsfun_7__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_](_ats2cljpre_stream_vt_patsfun_7 (ATSCCget_1 _fcenvs_))) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_10__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_10 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_19__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_19 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_22__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_22 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_25__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_25 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_27__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_27 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_30__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_30 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_32__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_32 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_36__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_36 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_40__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_40 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_44__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_44 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_48__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_48 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_52__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_52 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_stream_vt_patsfun_55__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_stream_vt_patsfun_55 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


;;fun
(defn
 ats2cljpre_stream_vt_free[arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_free
  (ATSINSmove1_void (atspre_lazy_vt_free arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt2t[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret6 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt2t
  (_ats2cljpre_stream_vt_aux_6 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_aux_6[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret7 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_aux_6
  (ATSPMVlazyval (_ats2cljpre_stream_vt_patsfun_7__closurerize arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_7[env0]
(
with-local-vars
[
;;knd = 0
  tmpret8 nil
  tmp9 nil
  tmp10 nil
  tmp11 nil
  tmp12 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_7
  (ATSINStmpset tmp9 (ATSPMVllazyval_eval env0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp9)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp10 (ATSSELcon @tmp9 0))
       (ATSINStmpset tmp11 (ATSSELcon @tmp9 1))
       ;; ATSINSfreecon(@tmp9);
       (ATSINStmpset tmp12 (_ats2cljpre_stream_vt_aux_6 @tmp11))
       (ATSPMVtysum @tmp10 @tmp12)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_takeLte[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret13 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_takeLte
  (_ats2cljpre_stream_vt_auxmain_9 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_auxmain_9[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret14 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_auxmain_9
  (ATSPMVllazyval (_ats2cljpre_stream_vt_patsfun_10__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_10[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret15 nil
  tmp16 nil
  tmp17 nil
  tmp18 nil
  tmp19 nil
  tmp20 nil
  tmp21 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_10
  (if arg0
    (do
     (ATSINStmpset tmp16 (ats2cljpre_gt_int1_int1 env1 0))
     (if @tmp16
       (do
        (ATSINStmpset tmp17 (ATSPMVllazyval_eval env0))
        (let[
          casefnx
          (fn casefnx[tmplab](case tmplab
            ;; ATSbranchseq_beg
            1 (do
             (if (ATSCKptriscons @tmp17)
               (casefnx 4)
               (do
                (casefnx 2)
               )
             )
            ) ;; end-of-branch
            2 (do
             atscc2clj_null
            ) ;; end-of-branch
            ;; ATSbranchseq_end
            ;; ATSbranchseq_beg
            3 (do
             (casefnx 4)
            ) ;; end-of-branch
            4 (do
             (ATSINStmpset tmp18 (ATSSELcon @tmp17 0))
             (ATSINStmpset tmp19 (ATSSELcon @tmp17 1))
             ;; ATSINSfreecon(@tmp17);
             (ATSINStmpset tmp21 (ats2cljpre_sub_int1_int1 env1 1))
             (ATSINStmpset tmp20 (_ats2cljpre_stream_vt_auxmain_9 @tmp19 @tmp21))
             (ATSPMVtysum @tmp18 @tmp20)
            ) ;; end-of-branch
            ;; ATSbranchseq_end
            ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
           ) ;; end-of-case
          ) ;; end-of-casefnx
         ] (casefnx 1)
        ) ;; end-of-let(casefnx)
       ) ;; if-then
       (do
        (ATSINSmove1_void (atspre_lazy_vt_free env0))
        atscc2clj_null
       ) ;; if-else
     )
    ) ;; if-then
    (do
     (ATSINSmove1_void (atspre_lazy_vt_free env0))
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_length[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret24 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_length
  (_ats2cljpre_stream_vt_loop_12 arg0 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_loop_12[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret25 nil
  tmp26 nil
  tmp28 nil
  tmp29 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_vt_loop_12
    (ATSINStmpset tmp26 (ATSPMVllazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp26)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp28 (ATSSELcon @tmp26 1))
         ;; ATSINSfreecon(@tmp26);
         (ATSINStmpset tmp29 (ats2cljpre_add_int1_int1 arg1 1))
         ;; apy0 = @tmp28
         ;; apy1 = @tmp29
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_vt_loop_12
         (_ats2cljpre_stream_vt_loop_12 @tmp28 @tmp29)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret25;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream2list_vt[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret30 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream2list_vt
  (_ats2cljpre_stream_vt_aux_14 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_aux_14[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret31 nil
  tmp32 nil
  tmp33 nil
  tmp34 nil
  tmp35 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_aux_14
  (ATSINStmpset tmp32 (ATSPMVllazyval_eval arg0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp32)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp33 (ATSSELcon @tmp32 0))
       (ATSINStmpset tmp34 (ATSSELcon @tmp32 1))
       ;; ATSINSfreecon(@tmp32);
       (ATSINStmpset tmp35 (_ats2cljpre_stream_vt_aux_14 @tmp34))
       (ATSPMVtysum @tmp33 @tmp35)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream2list_vt_rev[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret36 nil
  tmp42 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream2list_vt_rev
  (ATSINStmpset tmp42 atscc2clj_null)
  (_ats2cljpre_stream_vt_loop_16 arg0 @tmp42)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_loop_16[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret37 nil
  tmp38 nil
  tmp39 nil
  tmp40 nil
  tmp41 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_vt_loop_16
    (ATSINStmpset tmp38 (ATSPMVllazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp38)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp39 (ATSSELcon @tmp38 0))
         (ATSINStmpset tmp40 (ATSSELcon @tmp38 1))
         ;; ATSINSfreecon(@tmp38);
         (ATSINStmpset tmp41 (ATSPMVtysum @tmp39 arg1))
         ;; apy0 = @tmp40
         ;; apy1 = @tmp41
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_vt_loop_16
         (_ats2cljpre_stream_vt_loop_16 @tmp40 @tmp41)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret37;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_append[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret43 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_append
  (_ats2cljpre_stream_vt_auxmain_18 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_auxmain_18[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret44 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_auxmain_18
  (ATSPMVllazyval (_ats2cljpre_stream_vt_patsfun_19__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_19[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret45 nil
  tmp46 nil
  tmp47 nil
  tmp48 nil
  tmp49 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_19
  (if arg0
    (do
     (ATSINStmpset tmp46 (ATSPMVllazyval_eval env0))
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons @tmp46)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          (ATSPMVllazyval_eval env1)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp47 (ATSSELcon @tmp46 0))
          (ATSINStmpset tmp48 (ATSSELcon @tmp46 1))
          ;; ATSINSfreecon(@tmp46);
          (ATSINStmpset tmp49 (_ats2cljpre_stream_vt_auxmain_18 @tmp48 env1))
          (ATSPMVtysum @tmp47 @tmp49)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
     (ATSINSmove1_void (atspre_lazy_vt_free env0))
     (ATSINSmove1_void (atspre_lazy_vt_free env1))
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_concat[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret52 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_concat
  (_ats2cljpre_stream_vt_auxmain_21 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_auxmain_21[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret53 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_auxmain_21
  (ATSPMVllazyval (_ats2cljpre_stream_vt_patsfun_22__closurerize arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_22[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret54 nil
  tmp55 nil
  tmp56 nil
  tmp57 nil
  tmp58 nil
  tmp59 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_22
  (if arg0
    (do
     (ATSINStmpset tmp55 (ATSPMVllazyval_eval env0))
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons @tmp55)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp56 (ATSSELcon @tmp55 0))
          (ATSINStmpset tmp57 (ATSSELcon @tmp55 1))
          ;; ATSINSfreecon(@tmp55);
          (ATSINStmpset tmp59 (_ats2cljpre_stream_vt_auxmain_21 @tmp57))
          (ATSINStmpset tmp58 (ats2cljpre_stream_vt_append @tmp56 @tmp59))
          (ATSPMVllazyval_eval @tmp58)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
     (ATSINSmove1_void (atspre_lazy_vt_free env0))
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_map_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret61 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_map_cloref
  (_ats2cljpre_stream_vt_auxmain_24 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_auxmain_24[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret62 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_auxmain_24
  (ATSPMVllazyval (_ats2cljpre_stream_vt_patsfun_25__closurerize env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_25[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret63 nil
  tmp64 nil
  tmp65 nil
  tmp66 nil
  tmp67 nil
  tmp68 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_25
  (if arg0
    (do
     (ATSINStmpset tmp64 (ATSPMVllazyval_eval env1))
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons @tmp64)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp65 (ATSSELcon @tmp64 0))
          (ATSINStmpset tmp66 (ATSSELcon @tmp64 1))
          ;; ATSINSfreecon(@tmp64);
          (ATSINStmpset tmp67 ((ATSfunclo_fclo env0) env0 @tmp65))
          (ATSINStmpset tmp68 (_ats2cljpre_stream_vt_auxmain_24 env0 @tmp66))
          (ATSPMVtysum @tmp67 @tmp68)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
     (ATSINSmove1_void (atspre_lazy_vt_free env1))
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret70 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_map_method
  (_ats2cljpre_stream_vt_patsfun_27__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_27[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret71 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_27
  (ats2cljpre_stream_vt_map_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_filter_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret72 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_filter_cloref
  (_ats2cljpre_stream_vt_auxmain_29 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_auxmain_29[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret73 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_auxmain_29
  (ATSPMVllazyval (_ats2cljpre_stream_vt_patsfun_30__closurerize env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_30[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret74 nil
  tmp75 nil
  tmp76 nil
  tmp77 nil
  tmp78 nil
  tmp79 nil
  tmp80 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_30
  (if arg0
    (do
     (ATSINStmpset tmp75 (ATSPMVllazyval_eval env1))
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons @tmp75)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp76 (ATSSELcon @tmp75 0))
          (ATSINStmpset tmp77 (ATSSELcon @tmp75 1))
          ;; ATSINSfreecon(@tmp75);
          (ATSINStmpset tmp78 ((ATSfunclo_fclo env0) env0 @tmp76))
          (if @tmp78
            (do
             (ATSINStmpset tmp79 (_ats2cljpre_stream_vt_auxmain_29 env0 @tmp77))
             (ATSPMVtysum @tmp76 @tmp79)
            ) ;; if-then
            (do
             (ATSINStmpset tmp80 (_ats2cljpre_stream_vt_auxmain_29 env0 @tmp77))
             (ATSPMVllazyval_eval @tmp80)
            ) ;; if-else
          )
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
     (ATSINSmove1_void (atspre_lazy_vt_free env1))
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_filter_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret82 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_filter_method
  (_ats2cljpre_stream_vt_patsfun_32__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_32[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret83 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_32
  (ats2cljpre_stream_vt_filter_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_exists_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret84 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_exists_cloref
  (_ats2cljpre_stream_vt_loop_34 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_loop_34[env0 arg0]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
  tmpret85 nil
  tmp86 nil
  tmp87 nil
  tmp88 nil
  tmp89 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_vt_loop_34
    (ATSINStmpset tmp86 (ATSPMVllazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp86)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_false
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp87 (ATSSELcon @tmp86 0))
         (ATSINStmpset tmp88 (ATSSELcon @tmp86 1))
         ;; ATSINSfreecon(@tmp86);
         (ATSINStmpset tmp89 ((ATSfunclo_fclo env0) env0 @tmp87))
         (if @tmp89
           (do
            (ATSINSmove1_void (atspre_lazy_vt_free @tmp88))
            atscc2clj_true
           ) ;; if-then
           (do
            ;; apy0 = @tmp88
            ;; arg0 = apy0
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_vt_loop_34
            (_ats2cljpre_stream_vt_loop_34 env0 @tmp88)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret85;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_exists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret91 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_exists_method
  (_ats2cljpre_stream_vt_patsfun_36__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_36[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret92 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_36
  (ats2cljpre_stream_vt_exists_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_forall_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret93 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_forall_cloref
  (_ats2cljpre_stream_vt_loop_38 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_loop_38[env0 arg0]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
  tmpret94 nil
  tmp95 nil
  tmp96 nil
  tmp97 nil
  tmp98 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_vt_loop_38
    (ATSINStmpset tmp95 (ATSPMVllazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp95)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_true
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp96 (ATSSELcon @tmp95 0))
         (ATSINStmpset tmp97 (ATSSELcon @tmp95 1))
         ;; ATSINSfreecon(@tmp95);
         (ATSINStmpset tmp98 ((ATSfunclo_fclo env0) env0 @tmp96))
         (if @tmp98
           (do
            ;; apy0 = @tmp97
            ;; arg0 = apy0
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_vt_loop_38
            (_ats2cljpre_stream_vt_loop_38 env0 @tmp97)
           ) ;; if-then
           (do
            (ATSINSmove1_void (atspre_lazy_vt_free @tmp97))
            atscc2clj_false
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret94;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_forall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret100 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_forall_method
  (_ats2cljpre_stream_vt_patsfun_40__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_40[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret101 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_40
  (ats2cljpre_stream_vt_forall_cloref env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_foreach_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_foreach_cloref
  (ATSINSmove1_void (_ats2cljpre_stream_vt_loop_42 arg1 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_loop_42[env0 arg0]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
  tmp104 nil
  tmp105 nil
  tmp106 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_vt_loop_42
    (ATSINStmpset tmp104 (ATSPMVllazyval_eval arg0))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp104)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         ATSINSmove0_void
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp105 (ATSSELcon @tmp104 0))
         (ATSINStmpset tmp106 (ATSSELcon @tmp104 1))
         ;; ATSINSfreecon(@tmp104);
         (ATSINSmove1_void ((ATSfunclo_fclo env0) env0 @tmp105))
         ;; apy0 = @tmp106
         ;; arg0 = apy0
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_vt_loop_42
         (_ats2cljpre_stream_vt_loop_42 env0 @tmp106)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_foreach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret108 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_foreach_method
  (_ats2cljpre_stream_vt_patsfun_44__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_44[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_44
  (ATSINSmove1_void (ats2cljpre_stream_vt_foreach_cloref env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_iforeach_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_iforeach_cloref
  (ATSINSmove1_void (_ats2cljpre_stream_vt_loop_46 arg1 0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_loop_46[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmp112 nil
  tmp113 nil
  tmp114 nil
  tmp116 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_stream_vt_loop_46
    (ATSINStmpset tmp112 (ATSPMVllazyval_eval arg1))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp112)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         ATSINSmove0_void
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp113 (ATSSELcon @tmp112 0))
         (ATSINStmpset tmp114 (ATSSELcon @tmp112 1))
         ;; ATSINSfreecon(@tmp112);
         (ATSINSmove1_void ((ATSfunclo_fclo env0) env0 arg0 @tmp113))
         (ATSINStmpset tmp116 (ats2cljpre_add_int1_int1 arg0 1))
         ;; apy0 = @tmp116
         ;; apy1 = @tmp114
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_stream_vt_loop_46
         (_ats2cljpre_stream_vt_loop_46 env0 @tmp116 @tmp114)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_iforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret117 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_iforeach_method
  (_ats2cljpre_stream_vt_patsfun_48__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_48[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_48
  (ATSINSmove1_void (ats2cljpre_stream_vt_iforeach_cloref env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_rforeach_cloref[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_rforeach_cloref
  (ATSINSmove1_void (_ats2cljpre_stream_vt_auxmain_50 arg1 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_auxmain_50[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmp121 nil
  tmp122 nil
  tmp123 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_auxmain_50
  (ATSINStmpset tmp121 (ATSPMVllazyval_eval arg0))
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons @tmp121)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       ATSINSmove0_void
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp122 (ATSSELcon @tmp121 0))
       (ATSINStmpset tmp123 (ATSSELcon @tmp121 1))
       ;; ATSINSfreecon(@tmp121);
       (ATSINSmove1_void (_ats2cljpre_stream_vt_auxmain_50 env0 @tmp123))
       (ATSINSmove1_void ((ATSfunclo_fclo env0) env0 @tmp122))
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_rforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret125 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_rforeach_method
  (_ats2cljpre_stream_vt_patsfun_52__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_52[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_52
  (ATSINSmove1_void (ats2cljpre_stream_vt_rforeach_cloref env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_tabulate_cloref[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret127 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_tabulate_cloref
  (_ats2cljpre_stream_vt_auxmain_54 arg0 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_auxmain_54[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret128 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_auxmain_54
  (ATSPMVllazyval (_ats2cljpre_stream_vt_patsfun_55__closurerize env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_stream_vt_patsfun_55[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret129 nil
  tmp130 nil
  tmp131 nil
  tmp132 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_stream_vt_patsfun_55
  (if arg0
    (do
     (ATSINStmpset tmp130 ((ATSfunclo_fclo env0) env0 env1))
     (ATSINStmpset tmp132 (ats2cljpre_add_int1_int1 env1 1))
     (ATSINStmpset tmp131 (_ats2cljpre_stream_vt_auxmain_54 env0 @tmp132))
     (ATSPMVtysum @tmp130 @tmp131)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun

;;;;;;
;;
;; end-of-compilation-unit
;;
;;;;;;
