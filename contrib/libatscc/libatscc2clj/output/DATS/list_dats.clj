;;;;;;
;;
;; The Clojure code is generated by atscc2clj
;; The starting compilation time is: 2016-12-25: 17h:42m
;;
;;;;;;
(declare _ats2cljpre_list_loop1_4)
(declare _ats2cljpre_list_loop2_5)
(declare _ats2cljpre_list_loop_12)
(declare _ats2cljpre_list_loop_20)
(declare _ats2cljpre_list_auxlst_22)
(declare _ats2cljpre_list_patsfun_31)
(declare _ats2cljpre_list_loop_33)
(declare _ats2cljpre_list_patsfun_35)
(declare _ats2cljpre_list_patsfun_38)
(declare _ats2cljpre_list_loop_40)
(declare _ats2cljpre_list_patsfun_42)
(declare _ats2cljpre_list_patsfun_46)
(declare _ats2cljpre_list_aux_48)
(declare _ats2cljpre_list_patsfun_50)
(declare _ats2cljpre_list_patsfun_53)
(declare _ats2cljpre_list_aux_55)
(declare _ats2cljpre_list_patsfun_57)
(declare _ats2cljpre_list_aux_59)
(declare _ats2cljpre_list_patsfun_61)
(declare _ats2cljpre_list_loop_63)
(declare _ats2cljpre_list_patsfun_65)
(declare _ats2cljpre_list_loop_67)
(declare _ats2cljpre_list_patsfun_69)
(declare _ats2cljpre_list_aux_71)
(declare _ats2cljpre_list_patsfun_73)
(declare _ats2cljpre_list_aux_75)
(declare _ats2cljpre_list_patsfun_77)
(declare _ats2cljpre_list_auxmain_81)
(declare _ats2cljpre_list_patsfun_82)
(declare _ats2cljpre_list_auxmain_84)
(declare _ats2cljpre_list_patsfun_85)
(declare _ats2cljpre_list_auxone_87)
(declare _ats2cljpre_list_patsfun_88)
(declare _ats2cljpre_list_auxmain_89)
(declare _ats2cljpre_list_patsfun_90)
(declare _ats2cljpre_list_aux_99)
(declare _ats2cljpre_list_patsfun_101)
(declare ats2cljpre_list_make_intrange_2)
(declare ats2cljpre_list_make_intrange_3)
(declare _ats2cljpre_list_loop1_4)
(declare _ats2cljpre_list_loop2_5)
(declare ats2cljpre_list_length)
(declare _ats2cljpre_list_loop_12)
(declare ats2cljpre_list_last)
(declare ats2cljpre_list_get_at)
(declare ats2cljpre_list_snoc)
(declare ats2cljpre_list_extend)
(declare ats2cljpre_list_append)
(declare ats2cljpre_list_reverse)
(declare ats2cljpre_list_reverse_append)
(declare _ats2cljpre_list_loop_20)
(declare ats2cljpre_list_concat)
(declare _ats2cljpre_list_auxlst_22)
(declare ats2cljpre_list_take)
(declare ats2cljpre_list_drop)
(declare ats2cljpre_list_split_at)
(declare ats2cljpre_list_insert_at)
(declare ats2cljpre_list_remove_at)
(declare ats2cljpre_list_takeout_at)
(declare ats2cljpre_list_exists)
(declare ats2cljpre_list_exists_method)
(declare _ats2cljpre_list_patsfun_31)
(declare ats2cljpre_list_iexists)
(declare _ats2cljpre_list_loop_33)
(declare ats2cljpre_list_iexists_method)
(declare _ats2cljpre_list_patsfun_35)
(declare ats2cljpre_list_forall)
(declare ats2cljpre_list_forall_method)
(declare _ats2cljpre_list_patsfun_38)
(declare ats2cljpre_list_iforall)
(declare _ats2cljpre_list_loop_40)
(declare ats2cljpre_list_iforall_method)
(declare _ats2cljpre_list_patsfun_42)
(declare ats2cljpre_list_app)
(declare ats2cljpre_list_foreach)
(declare ats2cljpre_list_foreach_method)
(declare _ats2cljpre_list_patsfun_46)
(declare ats2cljpre_list_iforeach)
(declare _ats2cljpre_list_aux_48)
(declare ats2cljpre_list_iforeach_method)
(declare _ats2cljpre_list_patsfun_50)
(declare ats2cljpre_list_rforeach)
(declare ats2cljpre_list_rforeach_method)
(declare _ats2cljpre_list_patsfun_53)
(declare ats2cljpre_list_filter)
(declare _ats2cljpre_list_aux_55)
(declare ats2cljpre_list_filter_method)
(declare _ats2cljpre_list_patsfun_57)
(declare ats2cljpre_list_map)
(declare _ats2cljpre_list_aux_59)
(declare ats2cljpre_list_map_method)
(declare _ats2cljpre_list_patsfun_61)
(declare ats2cljpre_list_foldleft)
(declare _ats2cljpre_list_loop_63)
(declare ats2cljpre_list_foldleft_method)
(declare _ats2cljpre_list_patsfun_65)
(declare ats2cljpre_list_ifoldleft)
(declare _ats2cljpre_list_loop_67)
(declare ats2cljpre_list_ifoldleft_method)
(declare _ats2cljpre_list_patsfun_69)
(declare ats2cljpre_list_foldright)
(declare _ats2cljpre_list_aux_71)
(declare ats2cljpre_list_foldright_method)
(declare _ats2cljpre_list_patsfun_73)
(declare ats2cljpre_list_ifoldright)
(declare _ats2cljpre_list_aux_75)
(declare ats2cljpre_list_ifoldright_method)
(declare _ats2cljpre_list_patsfun_77)
(declare ats2cljpre_streamize_list_elt)
(declare _ats2cljpre_list_auxmain_81)
(declare _ats2cljpre_list_patsfun_82)
(declare ats2cljpre_streamize_list_zip)
(declare _ats2cljpre_list_auxmain_84)
(declare _ats2cljpre_list_patsfun_85)
(declare ats2cljpre_streamize_list_cross)
(declare _ats2cljpre_list_auxone_87)
(declare _ats2cljpre_list_patsfun_88)
(declare _ats2cljpre_list_auxmain_89)
(declare _ats2cljpre_list_patsfun_90)
(declare ats2cljpre_CLJlist_oflist_rev)
(declare _ats2cljpre_list_aux_99)
(declare ats2cljpre_list_sort_2)
(declare _ats2cljpre_list_patsfun_101)
;;;;;;


;;
;; ATSextcode_beg()
;;
;; list.dats
;; declared: stream_vt.dats
(declare ats2cljpre_stream_vt_append)
;;
;; ATSextcode_end()
;;

(defn
_ats2cljpre_list_patsfun_31__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_31 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_35__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_35 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_38__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_38 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_42__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_42 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_46__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_46 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_50__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_50 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_53__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_53 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_57__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_57 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_61__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_61 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_65__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_65 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_69__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_69 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_73__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_73 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_77__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_77 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_82__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_82 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_85__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_85 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_88__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_88 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_90__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_90 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_101__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0 xarg1](_ats2cljpre_list_patsfun_101 (ATSCCget_1 _fcenvs_) xarg0 xarg1)) xenv0)
;;%}
) ;; end-of-defn


;;fun
(defn
 ats2cljpre_list_make_intrange_2[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret2 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_make_intrange_2
  (ats2cljpre_list_make_intrange_3 arg0 arg1 1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_make_intrange_3[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret3 nil
  tmp14 nil
  tmp15 nil
  tmp16 nil
  tmp17 nil
  tmp18 nil
  tmp19 nil
  tmp20 nil
  tmp21 nil
  tmp22 nil
  tmp23 nil
  tmp24 nil
  tmp25 nil
  tmp26 nil
  tmp27 nil
  tmp28 nil
  tmp29 nil
  tmp30 nil
  tmp31 nil
  tmp32 nil
  tmp33 nil
  tmp34 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_make_intrange_3
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (ATSINStmpset tmp14 (ats2cljpre_gt_int0_int0 arg2 0))
       (if (not (ATSCKpat_bool @tmp14 atscc2clj_true))
         (casefnx 2)
         (do
          (ATSINStmpset tmp15 (ats2cljpre_lt_int0_int0 arg0 arg1))
          (if @tmp15
            (do
             (ATSINStmpset tmp19 (ats2cljpre_sub_int0_int0 arg1 arg0))
             (ATSINStmpset tmp18 (ats2cljpre_add_int0_int0 @tmp19 arg2))
             (ATSINStmpset tmp17 (ats2cljpre_sub_int0_int0 @tmp18 1))
             (ATSINStmpset tmp16 (ats2cljpre_div_int0_int0 @tmp17 arg2))
             (ATSINStmpset tmp22 (ats2cljpre_sub_int0_int0 @tmp16 1))
             (ATSINStmpset tmp21 (ats2cljpre_mul_int0_int0 @tmp22 arg2))
             (ATSINStmpset tmp20 (ats2cljpre_add_int0_int0 arg0 @tmp21))
             (ATSINStmpset tmp23 atscc2clj_null)
             (_ats2cljpre_list_loop1_4 @tmp16 @tmp20 arg2 @tmp23)
            ) ;; if-then
            (do
             atscc2clj_null
            ) ;; if-else
          )
         )
       )
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      2 (do
       (ATSINStmpset tmp24 (ats2cljpre_lt_int0_int0 arg2 0))
       (if (not (ATSCKpat_bool @tmp24 atscc2clj_true))
         (casefnx 3)
         (do
          (ATSINStmpset tmp25 (ats2cljpre_gt_int0_int0 arg0 arg1))
          (if @tmp25
            (do
             (ATSINStmpset tmp26 (ats2cljpre_neg_int0 arg2))
             (ATSINStmpset tmp30 (ats2cljpre_sub_int0_int0 arg0 arg1))
             (ATSINStmpset tmp29 (ats2cljpre_add_int0_int0 @tmp30 @tmp26))
             (ATSINStmpset tmp28 (ats2cljpre_sub_int0_int0 @tmp29 1))
             (ATSINStmpset tmp27 (ats2cljpre_div_int0_int0 @tmp28 @tmp26))
             (ATSINStmpset tmp33 (ats2cljpre_sub_int0_int0 @tmp27 1))
             (ATSINStmpset tmp32 (ats2cljpre_mul_int0_int0 @tmp33 @tmp26))
             (ATSINStmpset tmp31 (ats2cljpre_sub_int0_int0 arg0 @tmp32))
             (ATSINStmpset tmp34 atscc2clj_null)
             (_ats2cljpre_list_loop2_5 @tmp27 @tmp31 @tmp26 @tmp34)
            ) ;; if-then
            (do
             atscc2clj_null
            ) ;; if-else
          )
         )
       )
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop1_4[arg0 arg1 arg2 arg3]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
;;apy3 nil
  tmpret4 nil
  tmp5 nil
  tmp6 nil
  tmp7 nil
  tmp8 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
     arg2 arg2
     arg3 arg3
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop1_4
    (ATSINStmpset tmp5 (ats2cljpre_gt_int0_int0 arg0 0))
    (if @tmp5
      (do
       (ATSINStmpset tmp6 (ats2cljpre_sub_int0_int0 arg0 1))
       (ATSINStmpset tmp7 (ats2cljpre_sub_int0_int0 arg1 arg2))
       (ATSINStmpset tmp8 (ATSPMVtysum arg1 arg3))
       ;; apy0 = @tmp6
       ;; apy1 = @tmp7
       ;; apy2 = arg2
       ;; apy3 = @tmp8
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; arg2 = apy2
       ;; arg3 = apy3
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop1_4
       (recur @tmp6 @tmp7 arg2 @tmp8)
      ) ;; if-then
      (do
       arg3
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret4;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop2_5[arg0 arg1 arg2 arg3]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
;;apy3 nil
  tmpret9 nil
  tmp10 nil
  tmp11 nil
  tmp12 nil
  tmp13 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
     arg2 arg2
     arg3 arg3
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop2_5
    (ATSINStmpset tmp10 (ats2cljpre_gt_int0_int0 arg0 0))
    (if @tmp10
      (do
       (ATSINStmpset tmp11 (ats2cljpre_sub_int0_int0 arg0 1))
       (ATSINStmpset tmp12 (ats2cljpre_add_int0_int0 arg1 arg2))
       (ATSINStmpset tmp13 (ATSPMVtysum arg1 arg3))
       ;; apy0 = @tmp11
       ;; apy1 = @tmp12
       ;; apy2 = arg2
       ;; apy3 = @tmp13
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; arg2 = apy2
       ;; arg3 = apy3
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop2_5
       (recur @tmp11 @tmp12 arg2 @tmp13)
      ) ;; if-then
      (do
       arg3
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret9;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_length[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret46 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_length
  (_ats2cljpre_list_loop_12 arg0 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_12[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret47 nil
  tmp49 nil
  tmp50 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_12
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp49 (ATSSELcon arg0 1))
         (ATSINStmpset tmp50 (ats2cljpre_add_int1_int1 arg1 1))
         ;; apy0 = @tmp49
         ;; apy1 = @tmp50
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_12
         (_ats2cljpre_list_loop_12 @tmp49 @tmp50)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret47;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_last[arg0]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
  tmpret51 nil
  tmp52 nil
  tmp53 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
    ] ; funlab_clj = 0;
    ;; __patsflab_list_last
    (ATSINStmpset tmp52 (ATSSELcon arg0 0))
    (ATSINStmpset tmp53 (ATSSELcon arg0 1))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp53)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         @tmp52
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         ;; apy0 = @tmp53
         ;; arg0 = apy0
         ;; funlab_clj = 1; // __patsflab_list_last
         (ats2cljpre_list_last @tmp53)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret51;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_get_at[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret54 nil
  tmp55 nil
  tmp56 nil
  tmp57 nil
  tmp58 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_get_at
    (ATSINStmpset tmp55 (ats2cljpre_eq_int1_int1 arg1 0))
    (if @tmp55
      (do
       (ATSINStmpset tmp56 (ATSSELcon arg0 0))
       @tmp56
      ) ;; if-then
      (do
       (ATSINStmpset tmp57 (ATSSELcon arg0 1))
       (ATSINStmpset tmp58 (ats2cljpre_sub_int1_int1 arg1 1))
       ;; apy0 = @tmp57
       ;; apy1 = @tmp58
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; funlab_clj = 1; // __patsflab_list_get_at
       (recur @tmp57 @tmp58)
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret54;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_snoc[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret59 nil
  tmp60 nil
  tmp61 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_snoc
  (ATSINStmpset tmp61 atscc2clj_null)
  (ATSINStmpset tmp60 (ATSPMVtysum arg1 @tmp61))
  (ats2cljpre_list_append arg0 @tmp60)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_extend[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret62 nil
  tmp63 nil
  tmp64 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_extend
  (ATSINStmpset tmp64 atscc2clj_null)
  (ATSINStmpset tmp63 (ATSPMVtysum arg1 @tmp64))
  (ats2cljpre_list_append arg0 @tmp63)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_append[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret65 nil
  tmp66 nil
  tmp67 nil
  tmp68 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_append
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg1
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp66 (ATSSELcon arg0 0))
       (ATSINStmpset tmp67 (ATSSELcon arg0 1))
       (ATSINStmpset tmp68 (ats2cljpre_list_append @tmp67 arg1))
       (ATSPMVtysum @tmp66 @tmp68)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_reverse[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret69 nil
  tmp70 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_reverse
  (ATSINStmpset tmp70 atscc2clj_null)
  (ats2cljpre_list_reverse_append arg0 @tmp70)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_reverse_append[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret71 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_reverse_append
  (_ats2cljpre_list_loop_20 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_20[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret72 nil
  tmp73 nil
  tmp74 nil
  tmp75 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_20
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp73 (ATSSELcon arg0 0))
         (ATSINStmpset tmp74 (ATSSELcon arg0 1))
         (ATSINStmpset tmp75 (ATSPMVtysum @tmp73 arg1))
         ;; apy0 = @tmp74
         ;; apy1 = @tmp75
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_20
         (_ats2cljpre_list_loop_20 @tmp74 @tmp75)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret72;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_concat[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret76 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_concat
  (_ats2cljpre_list_auxlst_22 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxlst_22[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret77 nil
  tmp78 nil
  tmp79 nil
  tmp80 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxlst_22
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp78 (ATSSELcon arg0 0))
       (ATSINStmpset tmp79 (ATSSELcon arg0 1))
       (ATSINStmpset tmp80 (_ats2cljpre_list_auxlst_22 @tmp79))
       (ats2cljpre_list_append @tmp78 @tmp80)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_take[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret81 nil
  tmp82 nil
  tmp83 nil
  tmp84 nil
  tmp85 nil
  tmp86 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_take
  (ATSINStmpset tmp82 (ats2cljpre_gt_int1_int1 arg1 0))
  (if @tmp82
    (do
     (ATSINStmpset tmp83 (ATSSELcon arg0 0))
     (ATSINStmpset tmp84 (ATSSELcon arg0 1))
     (ATSINStmpset tmp86 (ats2cljpre_sub_int1_int1 arg1 1))
     (ATSINStmpset tmp85 (ats2cljpre_list_take @tmp84 @tmp86))
     (ATSPMVtysum @tmp83 @tmp85)
    ) ;; if-then
    (do
     atscc2clj_null
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_drop[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret87 nil
  tmp88 nil
  tmp89 nil
  tmp90 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_drop
    (ATSINStmpset tmp88 (ats2cljpre_gt_int1_int1 arg1 0))
    (if @tmp88
      (do
       (ATSINStmpset tmp89 (ATSSELcon arg0 1))
       (ATSINStmpset tmp90 (ats2cljpre_sub_int1_int1 arg1 1))
       ;; apy0 = @tmp89
       ;; apy1 = @tmp90
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; funlab_clj = 1; // __patsflab_list_drop
       (recur @tmp89 @tmp90)
      ) ;; if-then
      (do
       arg0
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret87;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_split_at[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret91 nil
  tmp92 nil
  tmp93 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_split_at
  (ATSINStmpset tmp92 (ats2cljpre_list_take arg0 arg1))
  (ATSINStmpset tmp93 (ats2cljpre_list_drop arg0 arg1))
  (ATSPMVtyrec @tmp92 @tmp93)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_insert_at[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret94 nil
  tmp95 nil
  tmp96 nil
  tmp97 nil
  tmp98 nil
  tmp99 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_insert_at
  (ATSINStmpset tmp95 (ats2cljpre_gt_int1_int1 arg1 0))
  (if @tmp95
    (do
     (ATSINStmpset tmp96 (ATSSELcon arg0 0))
     (ATSINStmpset tmp97 (ATSSELcon arg0 1))
     (ATSINStmpset tmp99 (ats2cljpre_sub_int1_int1 arg1 1))
     (ATSINStmpset tmp98 (ats2cljpre_list_insert_at @tmp97 @tmp99 arg2))
     (ATSPMVtysum @tmp96 @tmp98)
    ) ;; if-then
    (do
     (ATSPMVtysum arg2 arg0)
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_remove_at[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret100 nil
  tmp101 nil
  tmp102 nil
  tmp103 nil
  tmp104 nil
  tmp105 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_remove_at
  (ATSINStmpset tmp101 (ATSSELcon arg0 0))
  (ATSINStmpset tmp102 (ATSSELcon arg0 1))
  (ATSINStmpset tmp103 (ats2cljpre_gt_int1_int1 arg1 0))
  (if @tmp103
    (do
     (ATSINStmpset tmp105 (ats2cljpre_sub_int1_int1 arg1 1))
     (ATSINStmpset tmp104 (ats2cljpre_list_remove_at @tmp102 @tmp105))
     (ATSPMVtysum @tmp101 @tmp104)
    ) ;; if-then
    (do
     @tmp102
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_takeout_at[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret106 nil
  tmp107 nil
  tmp108 nil
  tmp109 nil
  tmp110 nil
  tmp111 nil
  tmp112 nil
  tmp113 nil
  tmp114 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_takeout_at
  (ATSINStmpset tmp107 (ATSSELcon arg0 0))
  (ATSINStmpset tmp108 (ATSSELcon arg0 1))
  (ATSINStmpset tmp109 (ats2cljpre_gt_int1_int1 arg1 0))
  (if @tmp109
    (do
     (ATSINStmpset tmp111 (ats2cljpre_sub_int1_int1 arg1 1))
     (ATSINStmpset tmp110 (ats2cljpre_list_takeout_at @tmp108 @tmp111))
     (ATSINStmpset tmp112 (ATSSELboxrec @tmp110 0))
     (ATSINStmpset tmp113 (ATSSELboxrec @tmp110 1))
     (ATSINStmpset tmp114 (ATSPMVtysum @tmp107 @tmp113))
     (ATSPMVtyrec @tmp112 @tmp114)
    ) ;; if-then
    (do
     (ATSPMVtyrec @tmp107 @tmp108)
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_exists[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret115 nil
  tmp116 nil
  tmp117 nil
  tmp118 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_exists
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_false
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp116 (ATSSELcon arg0 0))
         (ATSINStmpset tmp117 (ATSSELcon arg0 1))
         (ATSINStmpset tmp118 ((ATSfunclo_fclo arg1) arg1 @tmp116))
         (if @tmp118
           (do
            atscc2clj_true
           ) ;; if-then
           (do
            ;; apy0 = @tmp117
            ;; apy1 = arg1
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab_list_exists
            (ats2cljpre_list_exists @tmp117 arg1)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret115;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_exists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret119 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_exists_method
  (_ats2cljpre_list_patsfun_31__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_31[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret120 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_31
  (ats2cljpre_list_exists env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iexists[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret121 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iexists
  (_ats2cljpre_list_loop_33 arg1 0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_33[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret122 nil
  tmp123 nil
  tmp124 nil
  tmp125 nil
  tmp126 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_33
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_false
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp123 (ATSSELcon arg1 0))
         (ATSINStmpset tmp124 (ATSSELcon arg1 1))
         (ATSINStmpset tmp125 ((ATSfunclo_fclo env0) env0 arg0 @tmp123))
         (if @tmp125
           (do
            atscc2clj_true
           ) ;; if-then
           (do
            (ATSINStmpset tmp126 (ats2cljpre_add_int1_int1 arg0 1))
            ;; apy0 = @tmp126
            ;; apy1 = @tmp124
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_33
            (_ats2cljpre_list_loop_33 env0 @tmp126 @tmp124)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret122;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iexists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret127 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iexists_method
  (_ats2cljpre_list_patsfun_35__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_35[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret128 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_35
  (ats2cljpre_list_iexists env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_forall[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret129 nil
  tmp130 nil
  tmp131 nil
  tmp132 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_forall
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_true
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp130 (ATSSELcon arg0 0))
         (ATSINStmpset tmp131 (ATSSELcon arg0 1))
         (ATSINStmpset tmp132 ((ATSfunclo_fclo arg1) arg1 @tmp130))
         (if @tmp132
           (do
            ;; apy0 = @tmp131
            ;; apy1 = arg1
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab_list_forall
            (ats2cljpre_list_forall @tmp131 arg1)
           ) ;; if-then
           (do
            atscc2clj_false
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret129;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_forall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret133 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_forall_method
  (_ats2cljpre_list_patsfun_38__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_38[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret134 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_38
  (ats2cljpre_list_forall env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iforall[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret135 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iforall
  (_ats2cljpre_list_loop_40 arg1 0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_40[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret136 nil
  tmp137 nil
  tmp138 nil
  tmp139 nil
  tmp140 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_40
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_true
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp137 (ATSSELcon arg1 0))
         (ATSINStmpset tmp138 (ATSSELcon arg1 1))
         (ATSINStmpset tmp139 ((ATSfunclo_fclo env0) env0 arg0 @tmp137))
         (if @tmp139
           (do
            (ATSINStmpset tmp140 (ats2cljpre_add_int1_int1 arg0 1))
            ;; apy0 = @tmp140
            ;; apy1 = @tmp138
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_40
            (_ats2cljpre_list_loop_40 env0 @tmp140 @tmp138)
           ) ;; if-then
           (do
            atscc2clj_false
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret136;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iforall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret141 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iforall_method
  (_ats2cljpre_list_patsfun_42__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_42[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret142 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_42
  (ats2cljpre_list_iforall env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_app[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_app
  (ATSINSmove1_void (ats2cljpre_list_foreach arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foreach[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmp145 nil
  tmp146 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_foreach
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         ATSINSmove0_void
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp145 (ATSSELcon arg0 0))
         (ATSINStmpset tmp146 (ATSSELcon arg0 1))
         (ATSINSmove1_void ((ATSfunclo_fclo arg1) arg1 @tmp145))
         ;; apy0 = @tmp146
         ;; apy1 = arg1
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab_list_foreach
         (ats2cljpre_list_foreach @tmp146 arg1)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foreach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret148 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foreach_method
  (_ats2cljpre_list_patsfun_46__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_46[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_46
  (ATSINSmove1_void (ats2cljpre_list_foreach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iforeach[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iforeach
  (ATSINSmove1_void (_ats2cljpre_list_aux_48 arg1 0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_48[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmp152 nil
  tmp153 nil
  tmp155 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_aux_48
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         ATSINSmove0_void
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp152 (ATSSELcon arg1 0))
         (ATSINStmpset tmp153 (ATSSELcon arg1 1))
         (ATSINSmove1_void ((ATSfunclo_fclo env0) env0 arg0 @tmp152))
         (ATSINStmpset tmp155 (ats2cljpre_add_int1_int1 arg0 1))
         ;; apy0 = @tmp155
         ;; apy1 = @tmp153
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_aux_48
         (_ats2cljpre_list_aux_48 env0 @tmp155 @tmp153)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret156 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iforeach_method
  (_ats2cljpre_list_patsfun_50__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_50[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_50
  (ATSINSmove1_void (ats2cljpre_list_iforeach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_rforeach[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmp159 nil
  tmp160 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_rforeach
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       ATSINSmove0_void
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp159 (ATSSELcon arg0 0))
       (ATSINStmpset tmp160 (ATSSELcon arg0 1))
       (ATSINSmove1_void (ats2cljpre_list_rforeach @tmp160 arg1))
       (ATSINSmove1_void ((ATSfunclo_fclo arg1) arg1 @tmp159))
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_rforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret162 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_rforeach_method
  (_ats2cljpre_list_patsfun_53__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_53[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_53
  (ATSINSmove1_void (ats2cljpre_list_rforeach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_filter[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret164 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_filter
  (_ats2cljpre_list_aux_55 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_55[env0 arg0]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
  tmpret165 nil
  tmp166 nil
  tmp167 nil
  tmp168 nil
  tmp169 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_aux_55
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_null
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp166 (ATSSELcon arg0 0))
         (ATSINStmpset tmp167 (ATSSELcon arg0 1))
         (ATSINStmpset tmp168 ((ATSfunclo_fclo env0) env0 @tmp166))
         (if @tmp168
           (do
            (ATSINStmpset tmp169 (_ats2cljpre_list_aux_55 env0 @tmp167))
            (ATSPMVtysum @tmp166 @tmp169)
           ) ;; if-then
           (do
            ;; apy0 = @tmp167
            ;; arg0 = apy0
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_aux_55
            (_ats2cljpre_list_aux_55 env0 @tmp167)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret165;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_filter_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret170 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_filter_method
  (_ats2cljpre_list_patsfun_57__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_57[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret171 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_57
  (ats2cljpre_list_filter env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_map[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret172 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_map
  (_ats2cljpre_list_aux_59 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_59[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret173 nil
  tmp174 nil
  tmp175 nil
  tmp176 nil
  tmp177 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_aux_59
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp174 (ATSSELcon arg0 0))
       (ATSINStmpset tmp175 (ATSSELcon arg0 1))
       (ATSINStmpset tmp176 ((ATSfunclo_fclo env0) env0 @tmp174))
       (ATSINStmpset tmp177 (_ats2cljpre_list_aux_59 env0 @tmp175))
       (ATSPMVtysum @tmp176 @tmp177)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret178 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_map_method
  (_ats2cljpre_list_patsfun_61__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_61[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret179 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_61
  (ats2cljpre_list_map env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foldleft[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret180 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foldleft
  (_ats2cljpre_list_loop_63 arg2 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_63[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret181 nil
  tmp182 nil
  tmp183 nil
  tmp184 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_63
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg0
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp182 (ATSSELcon arg1 0))
         (ATSINStmpset tmp183 (ATSSELcon arg1 1))
         (ATSINStmpset tmp184 ((ATSfunclo_fclo env0) env0 arg0 @tmp182))
         ;; apy0 = @tmp184
         ;; apy1 = @tmp183
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_63
         (_ats2cljpre_list_loop_63 env0 @tmp184 @tmp183)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret181;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foldleft_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret185 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foldleft_method
  (_ats2cljpre_list_patsfun_65__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_65[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret186 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_65
  (ats2cljpre_list_foldleft env0 env1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_ifoldleft[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret187 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_ifoldleft
  (_ats2cljpre_list_loop_67 arg2 0 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_67[env0 arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
  tmpret188 nil
  tmp189 nil
  tmp190 nil
  tmp191 nil
  tmp192 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
     arg2 arg2
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_67
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg2)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp189 (ATSSELcon arg2 0))
         (ATSINStmpset tmp190 (ATSSELcon arg2 1))
         (ATSINStmpset tmp191 (ats2cljpre_add_int1_int1 arg0 1))
         (ATSINStmpset tmp192 ((ATSfunclo_fclo env0) env0 arg0 arg1 @tmp189))
         ;; apy0 = @tmp191
         ;; apy1 = @tmp192
         ;; apy2 = @tmp190
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; arg2 = apy2
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_67
         (_ats2cljpre_list_loop_67 env0 @tmp191 @tmp192 @tmp190)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret188;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_ifoldleft_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret193 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_ifoldleft_method
  (_ats2cljpre_list_patsfun_69__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_69[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret194 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_69
  (ats2cljpre_list_ifoldleft env0 env1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foldright[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret195 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foldright
  (_ats2cljpre_list_aux_71 arg1 arg0 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_71[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret196 nil
  tmp197 nil
  tmp198 nil
  tmp199 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_aux_71
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg1
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp197 (ATSSELcon arg0 0))
       (ATSINStmpset tmp198 (ATSSELcon arg0 1))
       (ATSINStmpset tmp199 (_ats2cljpre_list_aux_71 env0 @tmp198 arg1))
       ((ATSfunclo_fclo env0) env0 @tmp197 @tmp199)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foldright_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret200 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foldright_method
  (_ats2cljpre_list_patsfun_73__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_73[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret201 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_73
  (ats2cljpre_list_foldright env0 arg0 env1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_ifoldright[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret202 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_ifoldright
  (_ats2cljpre_list_aux_75 arg1 0 arg0 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_75[env0 arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret203 nil
  tmp204 nil
  tmp205 nil
  tmp206 nil
  tmp207 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_aux_75
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg1)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg2
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp204 (ATSSELcon arg1 0))
       (ATSINStmpset tmp205 (ATSSELcon arg1 1))
       (ATSINStmpset tmp207 (ats2cljpre_add_int1_int1 arg0 1))
       (ATSINStmpset tmp206 (_ats2cljpre_list_aux_75 env0 @tmp207 @tmp205 arg2))
       ((ATSfunclo_fclo env0) env0 arg0 @tmp204 @tmp206)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_ifoldright_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret208 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_ifoldright_method
  (_ats2cljpre_list_patsfun_77__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_77[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret209 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_77
  (ats2cljpre_list_ifoldright env0 arg0 env1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_streamize_list_elt[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret212 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list_elt
  (_ats2cljpre_list_auxmain_81 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxmain_81[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret213 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxmain_81
  (ATSPMVllazyval (_ats2cljpre_list_patsfun_82__closurerize arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_82[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret214 nil
  tmp215 nil
  tmp216 nil
  tmp217 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_82
  (if arg0
    (do
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons env0)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp215 (ATSSELcon env0 0))
          (ATSINStmpset tmp216 (ATSSELcon env0 1))
          (ATSINStmpset tmp217 (_ats2cljpre_list_auxmain_81 @tmp216))
          (ATSPMVtysum @tmp215 @tmp217)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_streamize_list_zip[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret218 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list_zip
  (_ats2cljpre_list_auxmain_84 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxmain_84[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret219 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxmain_84
  (ATSPMVllazyval (_ats2cljpre_list_patsfun_85__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_85[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret220 nil
  tmp221 nil
  tmp222 nil
  tmp223 nil
  tmp224 nil
  tmp225 nil
  tmp226 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_85
  (if arg0
    (do
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons env0)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp221 (ATSSELcon env0 0))
          (ATSINStmpset tmp222 (ATSSELcon env0 1))
          (let[
            casefnx
            (fn casefnx[tmplab](case tmplab
              ;; ATSbranchseq_beg
              1 (do
               (if (ATSCKptriscons env1)
                 (casefnx 4)
                 (do
                  (casefnx 2)
                 )
               )
              ) ;; end-of-branch
              2 (do
               atscc2clj_null
              ) ;; end-of-branch
              ;; ATSbranchseq_end
              ;; ATSbranchseq_beg
              3 (do
               (casefnx 4)
              ) ;; end-of-branch
              4 (do
               (ATSINStmpset tmp223 (ATSSELcon env1 0))
               (ATSINStmpset tmp224 (ATSSELcon env1 1))
               (ATSINStmpset tmp225 (ATSPMVtyrec @tmp221 @tmp223))
               (ATSINStmpset tmp226 (_ats2cljpre_list_auxmain_84 @tmp222 @tmp224))
               (ATSPMVtysum @tmp225 @tmp226)
              ) ;; end-of-branch
              ;; ATSbranchseq_end
              ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
             ) ;; end-of-case
            ) ;; end-of-casefnx
           ] (casefnx 1)
          ) ;; end-of-let(casefnx)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_streamize_list_cross[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret227 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list_cross
  (_ats2cljpre_list_auxmain_89 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxone_87[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret228 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxone_87
  (ATSPMVllazyval (_ats2cljpre_list_patsfun_88__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_88[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret229 nil
  tmp230 nil
  tmp231 nil
  tmp232 nil
  tmp233 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_88
  (if arg0
    (do
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons env1)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp230 (ATSSELcon env1 0))
          (ATSINStmpset tmp231 (ATSSELcon env1 1))
          (ATSINStmpset tmp232 (ATSPMVtyrec env0 @tmp230))
          (ATSINStmpset tmp233 (_ats2cljpre_list_auxone_87 env0 @tmp231))
          (ATSPMVtysum @tmp232 @tmp233)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxmain_89[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret234 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxmain_89
  (ATSPMVllazyval (_ats2cljpre_list_patsfun_90__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_90[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret235 nil
  tmp236 nil
  tmp237 nil
  tmp238 nil
  tmp239 nil
  tmp240 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_90
  (if arg0
    (do
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons env0)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp236 (ATSSELcon env0 0))
          (ATSINStmpset tmp237 (ATSSELcon env0 1))
          (ATSINStmpset tmp239 (_ats2cljpre_list_auxone_87 @tmp236 env1))
          (ATSINStmpset tmp240 (_ats2cljpre_list_auxmain_89 @tmp237 env1))
          (ATSINStmpset tmp238 (ats2cljpre_stream_vt_append @tmp239 @tmp240))
          (ATSPMVllazyval_eval @tmp238)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_CLJlist_oflist_rev[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret248 nil
  tmp253 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_CLJlist_oflist_rev
  (ATSINStmpset tmp253 (ats2cljpre_CLJlist_nil))
  (_ats2cljpre_list_aux_99 arg0 @tmp253)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_99[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret249 nil
  tmp250 nil
  tmp251 nil
  tmp252 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_aux_99
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp250 (ATSSELcon arg0 0))
         (ATSINStmpset tmp251 (ATSSELcon arg0 1))
         (ATSINStmpset tmp252 (ats2cljpre_CLJlist_cons @tmp250 arg1))
         ;; apy0 = @tmp251
         ;; apy1 = @tmp252
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_aux_99
         (_ats2cljpre_list_aux_99 @tmp251 @tmp252)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret249;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_sort_2[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret254 nil
  tmp255 nil
  tmp256 nil
  tmp259 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_sort_2
  (ATSINStmpset tmp255 (ats2cljpre_CLJlist_oflist_rev arg0))
  (ATSINStmpset tmp256 (ats2cljpre_CLJlist_sort_2 @tmp255 (_ats2cljpre_list_patsfun_101__closurerize arg1)))
  (ATSINStmpset tmp259 (ats2cljpre_CLJlist2list_rev @tmp256))
  @tmp259
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_101[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret257 nil
  tmp258 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_101
  (ATSINStmpset tmp258 ((ATSfunclo_fclo env0) env0 arg0 arg1))
  (ats2cljpre_neg_int0 @tmp258)
) ;; end-of-with-local-vars
) ;; end-of-fun

;;;;;;
;;
;; end-of-compilation-unit
;;
;;;;;;
